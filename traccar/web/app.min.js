Ext.define("Traccar.Style",{singleton:!0,refreshPeriod:6E4,reconnectTimeout:6E4,normalPadding:10,windowWidth:640,windowHeight:480,formFieldWidth:277,dateTimeFormat24:"Y-m-d H:i:s",dateTimeFormat12:"Y-m-d g:i:s a",timeFormat24:"H:i",timeFormat12:"g:i a",dateFormat:"Y-m-d",weekStartDay:1,deviceWidth:400,reportHeight:250,columnWidthNormal:100,mapDefaultLat:1.283333,mapDefaultLon:103.833333,mapDefaultZoom:4,mapRouteColor:"#F06292 #BA68C8 #4DD0E1 #4DB6AC #FF8A65 #A1887F".split(" "),mapRouteWidth:5,mapTextColor:"rgba(50, 50, 50, 1.0)",
mapTextStrokeColor:"rgba(255, 255, 255, 1.0)",mapTextStrokeWidth:2,mapTextOffset:2,mapTextFont:"bold 12px sans-serif",mapColorOnline:"rgba(77, 250, 144, 1.0)",mapColorUnknown:"rgba(250, 190, 77, 1.0)",mapColorOffline:"rgba(255, 162, 173, 1.0)",mapScaleNormal:1,mapScaleSelected:1.5,mapMaxZoom:18,mapDelay:500,mapAccuracyColor:"rgba(96, 96, 96, 1.0)",mapGeofenceTextColor:"rgba(14, 88, 141, 1.0)",mapGeofenceColor:"rgba(21, 127, 204, 1.0)",mapGeofenceOverlayOpacity:0.2,mapGeofenceWidth:5,mapGeofenceRadius:9,
coordinatePrecision:6,numberPrecision:2,reportGridStyle:"borderTop: 1px solid lightgray",chartPadding:"20 40 10 10",chartMarkerRadius:3,chartMarkerHighlightScaling:1.5});
Ext.define("Traccar.AttributeFormatter",{singleton:!0,coordinateFormatter:function(a,b){return Ext.getStore("CoordinateFormats").formatValue(a,b,Traccar.app.getPreference("coordinateFormat"))},speedFormatter:function(a){return Ext.getStore("SpeedUnits").formatValue(a,Traccar.app.getPreference("speedUnit"))},courseFormatter:function(a){return"N NE E SE S SW W NW".split(" ")[Math.floor(a/45)]},distanceFormatter:function(a){return Ext.getStore("DistanceUnits").formatValue(a,Traccar.app.getPreference("distanceUnit"))},
hoursFormatter:function(a){return Math.round(a/36E5)+" "+Strings.sharedHourAbbreviation},durationFormatter:function(a){var b;b=Math.floor(a/36E5);a=Math.round(a%36E5/6E4);return b+" "+Strings.sharedHourAbbreviation+" "+a+" "+Strings.sharedMinuteAbbreviation},deviceIdFormatter:function(a){return Ext.getStore("Devices").getById(a).get("name")},defaultFormatter:function(a){return"number"===typeof a?Number(a.toFixed(Traccar.Style.numberPrecision)):"boolean"===typeof a?a?Ext.Msg.buttonText.yes:Ext.Msg.buttonText.no:
a instanceof Date?Traccar.app.getPreference("twelveHourFormat",!1)?Ext.Date.format(a,Traccar.Style.dateTimeFormat12):Ext.Date.format(a,Traccar.Style.dateTimeFormat24):a},getFormatter:function(a){var b=this;return"latitude"===a||"longitude"===a?function(c){return b.coordinateFormatter(a,c)}:"speed"===a?this.speedFormatter:"course"===a?this.courseFormatter:"distance"===a||"odometer"===a||"totalDistance"===a||"accuracy"===a?this.distanceFormatter:"hours"===a?this.hoursFormatter:"duration"===a?this.durationFormatter:
"deviceId"===a?this.deviceIdFormatter:this.defaultFormatter}});
Ext.define("Traccar.model.Server",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"registration",type:"boolean"},{name:"readonly",type:"boolean"},{name:"deviceReadonly",type:"boolean"},{name:"map",type:"string"},{name:"bingKey",type:"string"},{name:"mapUrl",type:"string"},{name:"distanceUnit",type:"string"},{name:"speedUnit",type:"string"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"zoom",type:"int"},{name:"twelveHourFormat",type:"boolean"},
{name:"forceSettings",type:"boolean"},{name:"coordinateFormat",type:"string"},{name:"timezone",type:"string"},{name:"attributes"}],proxy:{type:"ajax",url:"api/server",actionMethods:{update:"PUT"},writer:{type:"json",writeAllFields:!0}}});
Ext.define("Traccar.model.User",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"email",type:"string"},{name:"password",type:"string"},{name:"phone",type:"string"},{name:"readonly",type:"boolean"},{name:"admin",type:"boolean"},{name:"map",type:"string"},{name:"distanceUnit",type:"string"},{name:"speedUnit",type:"string"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"zoom",type:"int"},{name:"twelveHourFormat",type:"boolean"},
{name:"coordinateFormat",type:"string"},{name:"disabled",type:"boolean"},{name:"expirationTime",type:"date",dateFormat:"c"},{name:"deviceLimit",type:"int"},{name:"userLimit",type:"int"},{name:"deviceReadonly",type:"boolean"},{name:"token",type:"string"},{name:"timezone",type:"string"},{name:"attributes"}],proxy:{type:"rest",url:"api/users",writer:{type:"json",writeAllFields:!0}}});
Ext.define("Traccar.model.Group",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"groupId",type:"int"},{name:"attributes"}]});
Ext.define("Traccar.model.Device",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"uniqueId",type:"string"},{name:"phone",type:"string",allowNull:!0},{name:"model",type:"string",allowNull:!0},{name:"contact",type:"string",allowNull:!0},{name:"category",type:"string",allowNull:!0},{name:"status",type:"string",allowNull:!0},{name:"lastUpdate",type:"date",dateFormat:"c"},{name:"groupId",type:"int"},{name:"geofenceIds"},{name:"attributes"}]});
Ext.define("Traccar.model.Position",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"protocol",type:"string"},{name:"deviceId",type:"int"},{name:"serverTime",type:"date",dateFormat:"c"},{name:"deviceTime",type:"date",dateFormat:"c"},{name:"fixTime",type:"date",dateFormat:"c"},{name:"valid",type:"boolean"},{name:"accuracy",type:"float"},{name:"latitude",type:"float"},{name:"longitude",type:"float"},{name:"altitude",type:"float"},{name:"speed",type:"float"},{name:"speedConverted",
type:"float",calculate:function(a){return Ext.getStore("SpeedUnits").convertValue(a.speed,Traccar.app.getPreference("speedUnit"))}},{name:"course",type:"float"},{name:"address",type:"string"},{name:"attributes"},{name:"distanceConverted",type:"float",calculate:function(a){return Ext.getStore("DistanceUnits").convertValue(a.attributes.distance,Traccar.app.getPreference("distanceUnit"))}}]});
Ext.define("Traccar.model.Attribute",{extend:Ext.data.Model,fields:[{name:"priority",type:"int"},{name:"name",type:"string"},{name:"value",type:"string"},{name:"attribute",type:"string"}]});Ext.define("Traccar.model.Command",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"deviceId",type:"int"},{name:"type",type:"string"},{name:"textChannel",type:"boolean"},{name:"attributes"}]});
Ext.define("Traccar.model.Event",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"type",type:"string"},{name:"serverTime",type:"date",dateFormat:"c"},{name:"deviceId",type:"int"},{name:"positionId",type:"int"},{name:"geofenceId",type:"int"},{name:"attributes"}]});
Ext.define("Traccar.model.Geofence",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"description",type:"string"},{name:"area",type:"string"},{name:"calendarId",type:"int"},{name:"attributes"}]});
Ext.define("Traccar.model.Notification",{extend:Ext.data.Model,idProperty:"type",fields:[{name:"id",type:"int"},{name:"type",type:"string"},{name:"userId",type:"int"},{name:"attributes"},{name:"web",type:"bool"},{name:"mail",type:"bool"},{name:"sms",type:"bool"}]});Ext.define("Traccar.model.AttributeAlias",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"deviceId",type:"int"},{name:"attribute",type:"string"},{name:"alias",type:"string"}]});
Ext.define("Traccar.model.ReportSummary",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"deviceId",type:"int"},{name:"deviceName",type:"string"},{name:"maxSpeed",type:"float"},{name:"averageSpeed",type:"float"},{name:"distance",type:"float"},{name:"engineHours",type:"int"}]});
Ext.define("Traccar.model.ReportTrip",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"deviceId",type:"int"},{name:"deviceName",type:"string"},{name:"maxSpeed",type:"float"},{name:"averageSpeed",type:"float"},{name:"distance",type:"float"},{name:"duration",type:"int"},{name:"startTime",type:"date",dateFormat:"c"},{name:"startAddress",type:"string"},{name:"endTime",type:"date",dateFormat:"c"},{name:"endAddress",type:"string"}]});
Ext.define("Traccar.model.Calendar",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"data"},{name:"attributes"}]});Ext.define("Traccar.store.Groups",{extend:Ext.data.Store,model:"Traccar.model.Group",proxy:{type:"rest",url:"api/groups",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.Devices",{extend:Ext.data.Store,model:"Traccar.model.Device",proxy:{type:"rest",url:"api/devices",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllGroups",{extend:Ext.data.Store,model:"Traccar.model.Group",proxy:{type:"rest",url:"api/groups",extraParams:{all:!0}}});Ext.define("Traccar.store.AllDevices",{extend:Ext.data.Store,model:"Traccar.model.Device",proxy:{type:"rest",url:"api/devices",extraParams:{all:!0}}});Ext.define("Traccar.store.Positions",{extend:Ext.data.Store,model:"Traccar.model.Position",proxy:{type:"rest",url:"api/positions",headers:{Accept:"application/json"}}});
Ext.define("Traccar.store.LatestPositions",{extend:Ext.data.Store,model:"Traccar.model.Position"});Ext.define("Traccar.store.Users",{extend:Ext.data.Store,model:"Traccar.model.User",proxy:{type:"rest",url:"api/users",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.Attributes",{extend:Ext.data.Store,model:"Traccar.model.Attribute",sorters:[{property:"priority"}]});
Ext.define("Traccar.store.MapTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"carto",name:Strings.mapCarto},{key:"osm",name:Strings.mapOsm},{key:"bingRoad",name:Strings.mapBingRoad},{key:"bingAerial",name:Strings.mapBingAerial},{key:"bingHybrid",name:Strings.mapBingHybrid},{key:"baidu",name:Strings.mapBaidu},{key:"yandexMap",name:Strings.mapYandexMap},{key:"yandexSat",name:Strings.mapYandexSat},{key:"custom",name:Strings.mapCustom}]});
Ext.define("Traccar.store.DistanceUnits",{extend:Ext.data.Store,fields:["key","name","factor"],data:[{key:"km",name:Strings.sharedKm,factor:0.001},{key:"mi",name:Strings.sharedMi,factor:6.21371E-4},{key:"nmi",name:Strings.sharedNmi,factor:5.39957E-4}],convertValue:function(a,b){var c;b||(b="km");c=this.findRecord("key",b);return a*c.get("factor")},formatValue:function(a,b){var c;b||(b="km");c=this.findRecord("key",b);return this.convertValue(a,b).toFixed(2)+" "+c.get("name")}});
Ext.define("Traccar.store.SpeedUnits",{extend:Ext.data.Store,fields:["key","name","factor"],data:[{key:"kn",name:Strings.sharedKn,factor:1},{key:"kmh",name:Strings.sharedKmh,factor:1.852},{key:"mph",name:Strings.sharedMph,factor:1.15078}],convertValue:function(a,b){var c;b||(b="kn");c=this.findRecord("key",b);return a*c.get("factor")},formatValue:function(a,b){var c;b||(b="kn");c=this.findRecord("key",b);return this.convertValue(a,b).toFixed(1)+" "+c.get("name")}});
Ext.define("Traccar.store.CoordinateFormats",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"dd",name:Strings.sharedDecimalDegrees},{key:"ddm",name:Strings.sharedDegreesDecimalMinutes},{key:"dms",name:Strings.sharedDegreesMinutesSeconds}],formatValue:function(a,b,c){var d;a="latitude"===a?0<=b?"N":"S":0<=b?"E":"W";switch(c){case "ddm":return b=Math.abs(b),c=Math.floor(b),c+"\u00b0 "+(60*(b-c)).toFixed(Traccar.Style.coordinatePrecision)+"' "+a;case "dms":return b=Math.abs(b),c=Math.floor(b),
d=Math.floor(60*(b-c)),b=Math.round(3600*(b-c-d/60)),c+"\u00b0 "+d+"' "+b+'" '+a;default:return b.toFixed(Traccar.Style.coordinatePrecision)+"\u00b0"}}});
Ext.define("Traccar.store.CommandTypes",{extend:Ext.data.Store,fields:["type","name"],proxy:{type:"rest",url:"api/commandtypes",reader:{type:"json",getData:function(a){Ext.each(a,function(a){var c;a.name=a.type;"undefined"!==typeof a.type&&(c="command"+a.type.charAt(0).toUpperCase()+a.type.slice(1),c=Strings[c],"undefined"!==typeof c&&(a.name=c))});return a}},listeners:{exception:function(a,b){Traccar.app.showError(b)}}}});
Ext.define("Traccar.store.TimeUnits",{extend:Ext.data.Store,fields:["name","factor"],data:[{name:Strings.sharedSecond,factor:1},{name:Strings.sharedMinute,factor:60},{name:Strings.sharedHour,factor:3600}]});Ext.define("Traccar.store.Languages",{extend:Ext.data.Store,fields:["code","name"],data:function(){var a,b=[];for(a in Locale.languages)Locale.languages.hasOwnProperty(a)&&b.push({code:a,name:Locale.languages[a].name});return b}()});
Ext.define("Traccar.store.Events",{extend:Ext.data.Store,model:"Traccar.model.Event",proxy:{type:"rest",url:"api/events"}});Ext.define("Traccar.store.Geofences",{extend:Ext.data.Store,model:"Traccar.model.Geofence",proxy:{type:"rest",url:"api/geofences",writer:{writeAllFields:!0}}});Ext.define("Traccar.store.AllGeofences",{extend:Ext.data.Store,model:"Traccar.model.Geofence",proxy:{type:"rest",url:"api/geofences",extraParams:{all:!0}}});
Ext.define("Traccar.store.Notifications",{extend:Ext.data.Store,model:"Traccar.model.Notification",proxy:{type:"rest",url:"api/users/notifications"},sortOnLoad:!0,sorters:{property:"type",direction:"ASC"}});Ext.define("Traccar.store.AllNotifications",{extend:Ext.data.Store,model:"Traccar.model.Notification",proxy:{type:"rest",url:"api/users/notifications",extraParams:{all:!0}},sortOnLoad:!0,sorters:{property:"type",direction:"ASC"}});
Ext.define("Traccar.store.GeofenceTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"Polygon",name:Strings.mapShapePolygon},{key:"Circle",name:Strings.mapShapeCircle},{key:"LineString",name:Strings.mapShapePolyline}]});Ext.define("Traccar.store.AttributeAliases",{extend:Ext.data.Store,model:"Traccar.model.AttributeAlias",proxy:{type:"rest",url:"api/attributes/aliases",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.ReportRoute",{extend:Ext.data.Store,model:"Traccar.model.Position",proxy:{type:"rest",url:"api/reports/route",headers:{Accept:"application/json"}}});Ext.define("Traccar.store.ReportEvents",{extend:Ext.data.Store,model:"Traccar.model.Event",proxy:{type:"rest",url:"api/reports/events",headers:{Accept:"application/json"}}});Ext.define("Traccar.store.ReportTrips",{extend:Ext.data.Store,model:"Traccar.model.ReportTrip",proxy:{type:"rest",url:"api/reports/trips",headers:{Accept:"application/json"}}});
Ext.define("Traccar.store.ReportSummary",{extend:Ext.data.Store,model:"Traccar.model.ReportSummary",proxy:{type:"rest",url:"api/reports/summary",headers:{Accept:"application/json"}}});Ext.define("Traccar.store.ReportTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"route",name:Strings.reportRoute},{key:"events",name:Strings.reportEvents},{key:"trips",name:Strings.reportTrips},{key:"summary",name:Strings.reportSummary},{key:"chart",name:Strings.reportChart}]});
Ext.define("Traccar.store.ReportEventTypes",{extend:Ext.data.Store,fields:["type","name"],statics:{allEvents:"allEvents"}});Ext.define("Traccar.store.ReportChartTypes",{extend:Ext.data.Store,fields:["key","name"],data:[{key:"speedConverted",name:Strings.positionSpeed},{key:"distanceConverted",name:Strings.positionDistance}]});
Ext.define("Traccar.model.Statistics",{extend:Ext.data.Model,identifier:"negative",fields:[{name:"id",type:"int"},{name:"captureTime",type:"date",dateFormat:"c"},{name:"activeUsers",type:"int"},{name:"activeDevices",type:"int"},{name:"requests",type:"int"},{name:"messagesReceived",type:"int"},{name:"messagesStored",type:"int"},{name:"attributes"}]});Ext.define("Traccar.store.Statistics",{extend:Ext.data.Store,model:"Traccar.model.Statistics",proxy:{type:"rest",url:"api/statistics"}});
Ext.define("Traccar.store.DeviceImages",{extend:Ext.data.Store,fields:"key name svg fillId rotateId scaleId".split(" "),data:[{key:"arrow",name:Strings.categoryArrow,svg:document.getElementById("arrowSvg").contentDocument,fillId:"arrow",rotateId:"arrow",scaleId:"arrow"},{key:"default",name:Strings.categoryDefault,svg:document.getElementById("defaultSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"},{key:"car",name:Strings.categoryCar,svg:document.getElementById("carSvg").contentDocument,
fillId:"background",rotateId:"background",scaleId:"layer1"},{key:"bus",name:Strings.categoryBus,svg:document.getElementById("busSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"},{key:"truck",name:Strings.categoryTruck,svg:document.getElementById("truckSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"},{key:"ship",name:Strings.categoryShip,svg:document.getElementById("shipSvg").contentDocument,fillId:"background",rotateId:"background",
scaleId:"layer1"},{key:"plane",name:Strings.categoryPlane,svg:document.getElementById("planeSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"},{key:"motorcycle",name:Strings.categoryMotorcycle,svg:document.getElementById("motorcycleSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"},{key:"bicycle",name:Strings.categoryBicycle,svg:document.getElementById("bicycleSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"},
{key:"person",name:Strings.categoryPerson,svg:document.getElementById("personSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"},{key:"animal",name:Strings.categoryAnimal,svg:document.getElementById("animalSvg").contentDocument,fillId:"background",rotateId:"background",scaleId:"layer1"}]});Ext.define("Traccar.store.Calendars",{extend:Ext.data.Store,model:"Traccar.model.Calendar",proxy:{type:"rest",url:"api/calendars",writer:{writeAllFields:!0}}});
Ext.define("Traccar.store.AllCalendars",{extend:Ext.data.Store,model:"Traccar.model.Calendar",proxy:{type:"rest",url:"api/calendars",extraParams:{all:!0}}});
Ext.define("Traccar.store.AllTimezones",{extend:Ext.data.Store,fields:["key"],sorters:{property:"key",direction:"ASC"},data:[{key:"Africa/Abidjan"},{key:"Africa/Accra"},{key:"Africa/Bissau"},{key:"Africa/Casablanca"},{key:"Africa/El_Aaiun"},{key:"Africa/Monrovia"},{key:"America/Danmarkshavn"},{key:"Antarctica/Troll"},{key:"Atlantic/Canary"},{key:"Atlantic/Faroe"},{key:"Atlantic/Madeira"},{key:"Atlantic/Reykjavik"},{key:"GMT"},{key:"Etc/GMT"},{key:"Etc/UCT"},{key:"Etc/UTC"},{key:"Europe/Dublin"},{key:"Europe/Lisbon"},
{key:"Europe/London"},{key:"WET"},{key:"Africa/Algiers"},{key:"Africa/Ceuta"},{key:"Africa/Lagos"},{key:"Africa/Ndjamena"},{key:"Africa/Tunis"},{key:"Africa/Windhoek"},{key:"CET"},{key:"Etc/GMT-1"},{key:"Europe/Amsterdam"},{key:"Europe/Andorra"},{key:"Europe/Belgrade"},{key:"Europe/Berlin"},{key:"Europe/Brussels"},{key:"Europe/Budapest"},{key:"Europe/Copenhagen"},{key:"Europe/Gibraltar"},{key:"Europe/Luxembourg"},{key:"Europe/Madrid"},{key:"Europe/Malta"},{key:"Europe/Monaco"},{key:"Europe/Oslo"},
{key:"Europe/Paris"},{key:"Europe/Prague"},{key:"Europe/Rome"},{key:"Europe/Stockholm"},{key:"Europe/Tirane"},{key:"Europe/Vienna"},{key:"Europe/Warsaw"},{key:"Europe/Zurich"},{key:"MET"},{key:"Africa/Cairo"},{key:"Africa/Johannesburg"},{key:"Africa/Maputo"},{key:"Africa/Tripoli"},{key:"Asia/Amman"},{key:"Asia/Beirut"},{key:"Asia/Damascus"},{key:"Asia/Gaza"},{key:"Asia/Hebron"},{key:"Asia/Jerusalem"},{key:"Asia/Nicosia"},{key:"EET"},{key:"Etc/GMT-2"},{key:"Europe/Athens"},{key:"Europe/Bucharest"},
{key:"Europe/Chisinau"},{key:"Europe/Helsinki"},{key:"Europe/Kaliningrad"},{key:"Europe/Kiev"},{key:"Europe/Riga"},{key:"Europe/Sofia"},{key:"Europe/Tallinn"},{key:"Europe/Uzhgorod"},{key:"Europe/Vilnius"},{key:"Europe/Zaporozhye"},{key:"Africa/Khartoum"},{key:"Africa/Nairobi"},{key:"Antarctica/Syowa"},{key:"Asia/Baghdad"},{key:"Asia/Famagusta"},{key:"Asia/Qatar"},{key:"Asia/Riyadh"},{key:"Etc/GMT-3"},{key:"Europe/Istanbul"},{key:"Europe/Kirov"},{key:"Europe/Minsk"},{key:"Europe/Moscow"},{key:"Europe/Simferopol"},
{key:"Europe/Volgograd"},{key:"Asia/Tehran"},{key:"Asia/Baku"},{key:"Asia/Dubai"},{key:"Asia/Tbilisi"},{key:"Asia/Yerevan"},{key:"Etc/GMT-4"},{key:"Europe/Astrakhan"},{key:"Europe/Samara"},{key:"Europe/Saratov"},{key:"Europe/Ulyanovsk"},{key:"Indian/Mahe"},{key:"Indian/Mauritius"},{key:"Indian/Reunion"},{key:"Asia/Kabul"},{key:"Antarctica/Mawson"},{key:"Asia/Aqtau"},{key:"Asia/Aqtobe"},{key:"Asia/Ashgabat"},{key:"Asia/Atyrau"},{key:"Asia/Dushanbe"},{key:"Asia/Karachi"},{key:"Asia/Oral"},{key:"Asia/Samarkand"},
{key:"Asia/Tashkent"},{key:"Asia/Yekaterinburg"},{key:"Etc/GMT-5"},{key:"Indian/Kerguelen"},{key:"Indian/Maldives"},{key:"Asia/Colombo"},{key:"Asia/Kolkata"},{key:"Asia/Kathmandu"},{key:"Antarctica/Vostok"},{key:"Asia/Almaty"},{key:"Asia/Bishkek"},{key:"Asia/Dhaka"},{key:"Asia/Omsk"},{key:"Asia/Qyzylorda"},{key:"Asia/Thimphu"},{key:"Asia/Urumqi"},{key:"Etc/GMT-6"},{key:"Indian/Chagos"},{key:"Asia/Yangon"},{key:"Indian/Cocos"},{key:"Antarctica/Davis"},{key:"Asia/Bangkok"},{key:"Asia/Barnaul"},{key:"Asia/Ho_Chi_Minh"},
{key:"Asia/Hovd"},{key:"Asia/Jakarta"},{key:"Asia/Krasnoyarsk"},{key:"Asia/Novokuznetsk"},{key:"Asia/Novosibirsk"},{key:"Asia/Pontianak"},{key:"Asia/Tomsk"},{key:"Etc/GMT-7"},{key:"Indian/Christmas"},{key:"Asia/Brunei"},{key:"Asia/Choibalsan"},{key:"Asia/Hong_Kong"},{key:"Asia/Irkutsk"},{key:"Asia/Kuala_Lumpur"},{key:"Asia/Kuching"},{key:"Asia/Macau"},{key:"Asia/Makassar"},{key:"Asia/Manila"},{key:"Asia/Shanghai"},{key:"Asia/Singapore"},{key:"Asia/Taipei"},{key:"Asia/Ulaanbaatar"},{key:"Australia/Perth"},
{key:"Etc/GMT-8"},{key:"Asia/Pyongyang"},{key:"Australia/Eucla"},{key:"Asia/Chita"},{key:"Asia/Dili"},{key:"Asia/Jayapura"},{key:"Asia/Khandyga"},{key:"Asia/Seoul"},{key:"Asia/Tokyo"},{key:"Asia/Yakutsk"},{key:"Etc/GMT-9"},{key:"Pacific/Palau"},{key:"Australia/Adelaide"},{key:"Australia/Broken_Hill"},{key:"Australia/Darwin"},{key:"Antarctica/DumontDUrville"},{key:"Asia/Ust-Nera"},{key:"Asia/Vladivostok"},{key:"Australia/Brisbane"},{key:"Australia/Currie"},{key:"Australia/Hobart"},{key:"Australia/Lindeman"},
{key:"Australia/Melbourne"},{key:"Australia/Sydney"},{key:"Etc/GMT-10"},{key:"Pacific/Chuuk"},{key:"Pacific/Guam"},{key:"Pacific/Port_Moresby"},{key:"Australia/Lord_Howe"},{key:"Antarctica/Casey"},{key:"Antarctica/Macquarie"},{key:"Asia/Magadan"},{key:"Asia/Sakhalin"},{key:"Asia/Srednekolymsk"},{key:"Etc/GMT-11"},{key:"Pacific/Bougainville"},{key:"Pacific/Efate"},{key:"Pacific/Guadalcanal"},{key:"Pacific/Kosrae"},{key:"Pacific/Norfolk"},{key:"Pacific/Noumea"},{key:"Pacific/Pohnpei"},{key:"Asia/Anadyr"},
{key:"Asia/Kamchatka"},{key:"Etc/GMT-12"},{key:"Pacific/Auckland"},{key:"Pacific/Fiji"},{key:"Pacific/Funafuti"},{key:"Pacific/Kwajalein"},{key:"Pacific/Majuro"},{key:"Pacific/Nauru"},{key:"Pacific/Tarawa"},{key:"Pacific/Wake"},{key:"Pacific/Wallis"},{key:"Pacific/Chatham"},{key:"Etc/GMT-13"},{key:"Pacific/Apia"},{key:"Pacific/Enderbury"},{key:"Pacific/Fakaofo"},{key:"Pacific/Tongatapu"},{key:"Etc/GMT-14"},{key:"Pacific/Kiritimati"},{key:"America/Scoresbysund"},{key:"Atlantic/Azores"},{key:"Atlantic/Cape_Verde"},
{key:"Etc/GMT+1"},{key:"America/Noronha"},{key:"Atlantic/South_Georgia"},{key:"Etc/GMT+2"},{key:"America/Araguaina"},{key:"America/Argentina/Buenos_Aires"},{key:"America/Argentina/Catamarca"},{key:"America/Argentina/Cordoba"},{key:"America/Argentina/Jujuy"},{key:"America/Argentina/La_Rioja"},{key:"America/Argentina/Mendoza"},{key:"America/Argentina/Rio_Gallegos"},{key:"America/Argentina/Salta"},{key:"America/Argentina/San_Juan"},{key:"America/Argentina/San_Luis"},{key:"America/Argentina/Tucuman"},
{key:"America/Argentina/Ushuaia"},{key:"America/Bahia"},{key:"America/Belem"},{key:"America/Cayenne"},{key:"America/Fortaleza"},{key:"America/Godthab"},{key:"America/Maceio"},{key:"America/Miquelon"},{key:"America/Montevideo"},{key:"America/Paramaribo"},{key:"America/Recife"},{key:"America/Santarem"},{key:"America/Sao_Paulo"},{key:"Antarctica/Rothera"},{key:"Atlantic/Stanley"},{key:"Etc/GMT+3"},{key:"America/St_Johns"},{key:"America/Asuncion"},{key:"America/Barbados"},{key:"America/Blanc-Sablon"},
{key:"America/Boa_Vista"},{key:"America/Campo_Grande"},{key:"America/Caracas"},{key:"America/Cuiaba"},{key:"America/Curacao"},{key:"America/Glace_Bay"},{key:"America/Goose_Bay"},{key:"America/Grand_Turk"},{key:"America/Guyana"},{key:"America/Halifax"},{key:"America/La_Paz"},{key:"America/Manaus"},{key:"America/Martinique"},{key:"America/Moncton"},{key:"America/Port_of_Spain"},{key:"America/Porto_Velho"},{key:"America/Puerto_Rico"},{key:"America/Santiago"},{key:"America/Santo_Domingo"},{key:"America/Thule"},
{key:"Antarctica/Palmer"},{key:"Atlantic/Bermuda"},{key:"Etc/GMT+4"},{key:"America/Atikokan"},{key:"America/Bogota"},{key:"America/Cancun"},{key:"America/Detroit"},{key:"America/Eirunepe"},{key:"America/Guayaquil"},{key:"America/Havana"},{key:"America/Indiana/Indianapolis"},{key:"America/Indiana/Marengo"},{key:"America/Indiana/Petersburg"},{key:"America/Indiana/Vevay"},{key:"America/Indiana/Vincennes"},{key:"America/Indiana/Winamac"},{key:"America/Iqaluit"},{key:"America/Jamaica"},{key:"America/Kentucky/Louisville"},
{key:"America/Kentucky/Monticello"},{key:"America/Lima"},{key:"America/Nassau"},{key:"America/New_York"},{key:"America/Nipigon"},{key:"America/Panama"},{key:"America/Pangnirtung"},{key:"America/Port-au-Prince"},{key:"America/Rio_Branco"},{key:"America/Thunder_Bay"},{key:"America/Toronto"},{key:"EST"},{key:"EST5EDT"},{key:"Etc/GMT+5"},{key:"America/Bahia_Banderas"},{key:"America/Belize"},{key:"America/Chicago"},{key:"America/Costa_Rica"},{key:"America/El_Salvador"},{key:"America/Guatemala"},{key:"America/Indiana/Knox"},
{key:"America/Indiana/Tell_City"},{key:"America/Managua"},{key:"America/Matamoros"},{key:"America/Menominee"},{key:"America/Merida"},{key:"America/Mexico_City"},{key:"America/Monterrey"},{key:"America/North_Dakota/Beulah"},{key:"America/North_Dakota/Center"},{key:"America/North_Dakota/New_Salem"},{key:"America/Rainy_River"},{key:"America/Rankin_Inlet"},{key:"America/Regina"},{key:"America/Resolute"},{key:"America/Swift_Current"},{key:"America/Tegucigalpa"},{key:"America/Winnipeg"},{key:"CST6CDT"},
{key:"Etc/GMT+6"},{key:"Pacific/Easter"},{key:"Pacific/Galapagos"},{key:"America/Boise"},{key:"America/Cambridge_Bay"},{key:"America/Chihuahua"},{key:"America/Creston"},{key:"America/Dawson_Creek"},{key:"America/Denver"},{key:"America/Edmonton"},{key:"America/Fort_Nelson"},{key:"America/Hermosillo"},{key:"America/Inuvik"},{key:"America/Mazatlan"},{key:"America/Ojinaga"},{key:"America/Phoenix"},{key:"America/Yellowknife"},{key:"Etc/GMT+7"},{key:"MST"},{key:"MST7MDT"},{key:"America/Dawson"},{key:"America/Los_Angeles"},
{key:"America/Tijuana"},{key:"America/Vancouver"},{key:"America/Whitehorse"},{key:"Etc/GMT+8"},{key:"Pacific/Pitcairn"},{key:"PST8PDT"},{key:"America/Anchorage"},{key:"America/Juneau"},{key:"America/Metlakatla"},{key:"America/Nome"},{key:"America/Sitka"},{key:"America/Yakutat"},{key:"Etc/GMT+9"},{key:"Pacific/Gambier"},{key:"Pacific/Marquesas"},{key:"America/Adak"},{key:"Etc/GMT+10"},{key:"HST"},{key:"Pacific/Honolulu"},{key:"Pacific/Rarotonga"},{key:"Pacific/Tahiti"},{key:"Etc/GMT+11"},{key:"Pacific/Niue"},
{key:"Pacific/Pago_Pago"},{key:"Etc/GMT+12"}]});Ext.define("Traccar.store.VisibleDevices",{extend:Ext.data.ChainedStore,source:"Devices"});Ext.define("Traccar.store.DeviceStatuses",{extend:Ext.data.Store,fields:["id","name","color"],data:[{id:"online",name:Strings.deviceStatusOnline,color:"view-color-green"},{id:"offline",name:Strings.deviceStatusOffline,color:"view-color-red"},{id:"unknown",name:Strings.deviceStatusUnknown,color:"view-color-yellow"}]});
Ext.define("Traccar.view.dialog.Base",{extend:Ext.window.Window,bodyPadding:Traccar.Style.normalPadding,resizable:!1,modal:!0,autoScroll:!0,constrain:!0,initComponent:function(){window.innerHeight&&(this.maxHeight=window.innerHeight-2*Traccar.Style.normalPadding);this.callParent()}});
Ext.define("Traccar.view.dialog.RegisterController",{extend:Ext.app.ViewController,alias:"controller.register",onCreateClick:function(){var a=this.lookupReference("form");a.isValid()&&Ext.Ajax.request({scope:this,method:"POST",url:"api/users",jsonData:a.getValues(),callback:this.onCreateReturn})},onCreateReturn:function(a,b,c){b?(this.closeView(),Ext.toast(Strings.loginCreated)):Traccar.app.showError(c)}});
Ext.define("Traccar.view.dialog.Register",{extend:Traccar.view.dialog.Base,controller:"register",title:Strings.loginRegister,items:{xtype:"form",reference:"form",jsonSubmit:!0,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"textfield",name:"email",fieldLabel:Strings.userEmail,vtype:"email",allowBlank:!1},{xtype:"textfield",name:"password",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1}]},buttons:[{text:Strings.sharedSave,handler:"onCreateClick"},
{text:Strings.sharedCancel,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.LoginController",{extend:Ext.app.ViewController,alias:"controller.login",init:function(){this.lookupReference("registerButton").setDisabled(!Traccar.app.getServer().get("registration"));this.lookupReference("languageField").setValue(Locale.language)},login:function(){var a=this.lookupReference("form");a.isValid()&&(Ext.get("spinner").setVisible(!0),this.getView().setVisible(!1),Ext.Ajax.request({scope:this,method:"POST",url:"api/session",params:a.getValues(),callback:function(a,
c,d){Ext.get("spinner").setVisible(!1);c?(this.lookupReference("rememberField").getValue()&&(a=Ext.util.Base64.encode(this.lookupReference("userField").getValue()),c=Ext.util.Base64.encode(this.lookupReference("passwordField").getValue()),Ext.util.Cookies.set("user",a,Ext.Date.add(new Date,Ext.Date.YEAR,1)),Ext.util.Cookies.set("password",c,Ext.Date.add(new Date,Ext.Date.YEAR,1))),Traccar.app.setUser(Ext.decode(d.responseText)),this.fireViewEvent("login")):(this.getView().setVisible(!0),401===d.status?
Traccar.app.showError(Strings.loginFailed):Traccar.app.showError(d.responseText))}}))},logout:function(){Ext.util.Cookies.clear("user");Ext.util.Cookies.clear("password");Ext.Ajax.request({scope:this,method:"DELETE",url:"api/session",callback:function(){window.location.reload()}})},onSelectLanguage:function(a){var b,c;a=a.getValue();b=window.location.href;0<=b.indexOf("locale\x3d")?(c=b.substring(0,b.indexOf("locale")),b=b.substring(b.indexOf("locale")),b=b.substring(b.indexOf("\x3d")+1),b=0<=b.indexOf("\x26")?
b.substring(b.indexOf("\x26")):"",b=c+"locale\x3d"+a+b):b=0>b.indexOf("?")?b+("?locale\x3d"+a):b+("\x26locale\x3d"+a);window.location.href=b},onAfterRender:function(a){a.focus()},onSpecialKey:function(a,b){b.getKey()===b.ENTER&&this.login()},onLoginClick:function(){Ext.getElementById("submitButton").click();this.login()},onRegisterClick:function(){Ext.create("Traccar.view.dialog.Register").show()}});
Ext.define("Traccar.view.dialog.Login",{extend:Traccar.view.dialog.Base,alias:"widget.login",controller:"login",header:!1,closable:!1,modal:!1,items:{xtype:"form",reference:"form",autoEl:{tag:"form",method:"POST",action:"fake-login.html",target:"submitTarget"},items:[{xtype:"image",src:"logo.svg",alt:Strings.loginLogo,width:180,height:48,style:{display:"block",margin:"10px auto 25px"}},{xtype:"combobox",name:"language",fieldLabel:Strings.loginLanguage,store:"Languages",displayField:"name",valueField:"code",
editable:!1,submitValue:!1,listeners:{select:"onSelectLanguage"},reference:"languageField"},{xtype:"textfield",name:"email",reference:"userField",fieldLabel:Strings.userEmail,allowBlank:!1,enableKeyEvents:!0,listeners:{specialKey:"onSpecialKey",afterrender:"onAfterRender"},inputAttrTpl:['autocomplete\x3d"on"']},{xtype:"textfield",name:"password",reference:"passwordField",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1,enableKeyEvents:!0,listeners:{specialKey:"onSpecialKey"},inputAttrTpl:['autocomplete\x3d"on"']},
{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,reference:"rememberField",fieldLabel:Strings.userRemember},{xtype:"component",html:'\x3ciframe id\x3d"submitTarget" name\x3d"submitTarget" style\x3d"display:none"\x3e\x3c/iframe\x3e'},{xtype:"component",html:'\x3cinput type\x3d"submit" id\x3d"submitButton" style\x3d"display:none"\x3e'}]},buttons:[{text:Strings.loginRegister,handler:"onRegisterClick",reference:"registerButton"},{text:Strings.loginLogin,handler:"onLoginClick"}]});
Ext.define("Traccar.view.edit.ToolbarController",{extend:Ext.app.ViewController,alias:"controller.toolbarController",onAddClick:function(){var a,b=Ext.create(this.objectModel);b.store=this.getView().getStore();b.store instanceof Ext.data.ChainedStore&&(b.store=b.store.getSource());a=Ext.create(this.objectDialog);a.down("form").loadRecord(b);a.show()},onEditClick:function(){var a,b=this.getView().getSelectionModel().getSelection()[0];a=Ext.create(this.objectDialog);a.down("form").loadRecord(b);a.show()},
onRemoveClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.Msg.show({title:this.removeTitle,message:Strings.sharedRemoveConfirm,buttons:Ext.Msg.YESNO,buttonText:{yes:Strings.sharedRemove,no:Strings.sharedCancel},fn:function(b){var c=a.store;"yes"===b&&(c.remove(a),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}}))}})},onSelectionChange:function(a){a=0<a.length;this.lookupReference("toolbarEditButton").setDisabled(a);
this.lookupReference("toolbarRemoveButton").setDisabled(a)}});
Ext.define("Traccar.view.dialog.CommandController",{extend:Ext.app.ViewController,alias:"controller.command",onSelect:function(a){this.lookupReference("paramPositionPeriodic").setHidden("positionPeriodic"!==a.getValue());this.lookupReference("paramOutputControl").setHidden("outputControl"!==a.getValue());this.lookupReference("paramSendSmsUssd").setHidden("sendSms"!==a.getValue()&&"sendUssd"!==a.getValue());this.lookupReference("paramSmsMessage").setHidden("sendSms"!==a.getValue());this.lookupReference("paramSetTimezone").setHidden("setTimezone"!==
a.getValue());this.lookupReference("paramSetIndicator").setHidden("setIndicator"!==a.getValue());this.lookupReference("paramCustom").setHidden("custom"!==a.getValue())},onSendClick:function(a){var b,c,d;a=a.up("window").down("form");a.updateRecord();c=a.getRecord();"positionPeriodic"===c.get("type")&&(a=this.lookupReference("paramPositionPeriodic"),b=a.down('numberfield[name\x3d"frequency"]').getValue(),b*=a.down('combobox[name\x3d"unit"]').getValue(),c.set("attributes",{frequency:b}));"outputControl"===
c.get("type")&&(a=this.lookupReference("paramOutputControl"),d=a.down('numberfield[name\x3d"index"]').getValue(),b=a.down('textfield[name\x3d"data"]').getValue(),c.set("attributes",{index:d,data:b}));"sendUssd"===c.get("type")&&(a=this.lookupReference("paramSendSmsUssd"),d=a.down('textfield[name\x3d"phone"]').getValue(),c.set("attributes",{phone:d}));"sendSms"===c.get("type")&&(a=this.lookupReference("paramSendSmsUssd"),d=a.down('textfield[name\x3d"phone"]').getValue(),b=a.down('textfield[name\x3d"message"]').getValue(),
c.set("attributes",{phone:d,message:b}));"setTimezone"===c.get("type")&&(a=this.lookupReference("paramSetTimezone"),b=a.down('numberfield[name\x3d"timezone"]').getValue(),c.set("attributes",{timezone:3600*b}));"setIndicator"===c.get("type")&&(a=this.lookupReference("paramSetIndicator"),b=a.down('numberfield[name\x3d"data"]').getValue(),c.set("attributes",{data:b}));"custom"===c.get("type")&&(b=this.lookupReference("paramCustom").getValue(),c.set("attributes",{data:b}));Ext.Ajax.request({scope:this,
url:"api/commands",jsonData:c.getData(),callback:this.onSendResult})},onTextChannelChange:function(a,b){var c=this.lookupReference("commandType").getStore();c.getProxy().setExtraParam("textChannel",b);c.reload()},onSendResult:function(a,b,c){b?(Ext.toast({html:Strings.commandSent,align:"br"}),this.closeView()):Traccar.app.showError(c)}});
Ext.define("Traccar.view.dialog.Command",{extend:Traccar.view.dialog.Base,controller:"command",title:Strings.commandTitle,items:{xtype:"form",items:[{xtype:"checkboxfield",name:"textChannel",reference:"textChannelCheckBox",inputValue:!0,uncheckedValue:!1,fieldLabel:Strings.notificationSms,listeners:{change:"onTextChannelChange"}},{xtype:"combobox",name:"type",reference:"commandType",fieldLabel:Strings.sharedType,store:"CommandTypes",displayField:"name",valueField:"type",editable:!1,listeners:{select:"onSelect"}},
{xtype:"fieldcontainer",reference:"paramPositionPeriodic",name:"attributes",hidden:!0,items:[{xtype:"numberfield",fieldLabel:Strings.commandFrequency,name:"frequency"},{xtype:"combobox",fieldLabel:Strings.commandUnit,name:"unit",store:"TimeUnits",displayField:"name",valueField:"factor"}]},{xtype:"fieldcontainer",reference:"paramOutputControl",name:"attributes",hidden:!0,items:[{xtype:"numberfield",fieldLabel:Strings.commandIndex,name:"index",allowBlank:!1},{xtype:"textfield",fieldLabel:Strings.commandData,
name:"data"}]},{xtype:"fieldcontainer",reference:"paramSendSmsUssd",name:"attributes",hidden:!0,items:[{xtype:"textfield",fieldLabel:Strings.commandPhone,name:"phone"},{xtype:"textfield",reference:"paramSmsMessage",fieldLabel:Strings.commandMessage,name:"message",hidden:!0}]},{xtype:"fieldcontainer",reference:"paramSetTimezone",name:"attributes",hidden:!0,items:[{xtype:"numberfield",fieldLabel:Strings.commandTimezone,name:"timezone",minValue:-12,step:0.5,maxValue:14}]},{xtype:"fieldcontainer",reference:"paramSetIndicator",
name:"attributes",hidden:!0,items:[{xtype:"numberfield",fieldLabel:Strings.commandData,name:"data",minValue:0,maxValue:99}]},{xtype:"textfield",reference:"paramCustom",fieldLabel:Strings.commandCustom,name:"customCommand",hidden:!0,allowBlank:!1}]},buttons:[{text:Strings.commandSend,handler:"onSendClick"},{text:Strings.sharedCancel,handler:"closeView"}]});
Ext.define("Traccar.view.BaseWindow",{extend:Ext.window.Window,width:Traccar.Style.windowWidth,height:Traccar.Style.windowHeight,layout:"fit",modal:!0,initComponent:function(){if(window.innerWidth<Traccar.Style.windowWidth||window.innerHeight<Traccar.Style.windowHeight)this.maximized=!0,this.style="border-width: 0";this.callParent()}});
Ext.define("Traccar.view.dialog.AttributeController",{extend:Ext.app.ViewController,alias:"controller.attribute",onSaveClick:function(a){var b,c;b=a.up("window").down("form");b.updateRecord();b=b.getRecord();(c=b.store)?(b.phantom&&c.add(b),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}})):b.save();a.up("window").close()}});
Ext.define("Traccar.view.dialog.Attribute",{extend:Traccar.view.dialog.Base,controller:"attribute",title:Strings.sharedAttribute,items:{xtype:"form",items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName},{xtype:"textfield",name:"value",fieldLabel:Strings.stateValue}]},buttons:[{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.edit.AttributesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.attributes",objectModel:"Traccar.model.Attribute",objectDialog:"Traccar.view.dialog.Attribute",removeTitle:Strings.stateName,init:function(){var a,b,c=0,d;a=Ext.create("Traccar.store.Attributes");a.setProxy(Ext.create("Ext.data.proxy.Memory"));"undefined"===typeof this.getView().record.get("attributes")&&this.getView().record.set("attributes",{});d=this.getView().record.get("attributes");
for(b in d)d.hasOwnProperty(b)&&a.add(Ext.create("Traccar.model.Attribute",{priority:c++,name:b,value:this.getView().record.get("attributes")[b]}));a.addListener("add",function(a,b){var c;for(c=0;c<b.length;c++)this.getView().record.get("attributes")[b[c].get("name")]=b[c].get("value");this.getView().record.dirty=!0},this);a.addListener("update",function(a,b,c){c===Ext.data.Model.EDIT&&(b.modified.name!==b.get("name")&&delete this.getView().record.get("attributes")[b.modified.name],this.getView().record.get("attributes")[b.get("name")]=
b.get("value"),this.getView().record.dirty=!0)},this);a.addListener("remove",function(a,b){var c;for(c=0;c<b.length;c++)delete this.getView().record.get("attributes")[b[c].get("name")];this.getView().record.dirty=!0},this);this.getView().setStore(a)}});
Ext.define("Traccar.view.edit.Toolbar",{extend:Ext.toolbar.Toolbar,xtype:"editToolbar",initComponent:function(){this.callParent(arguments);this.add(0,[{xtype:"button",handler:"onAddClick",reference:"toolbarAddButton",glyph:"xf067@FontAwesome",tooltip:Strings.sharedAdd,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onEditClick",reference:"toolbarEditButton",glyph:"xf040@FontAwesome",tooltip:Strings.sharedEdit,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onRemoveClick",reference:"toolbarRemoveButton",
glyph:"xf00d@FontAwesome",tooltip:Strings.sharedRemove,tooltipType:"title"}])}});Ext.define("Traccar.view.edit.Attributes",{extend:Ext.grid.Panel,xtype:"attributesView",controller:"attributes",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name"},{text:Strings.stateValue,dataIndex:"value"}]}});
Ext.define("Traccar.view.dialog.BaseEditController",{extend:Ext.app.ViewController,alias:"controller.baseEdit",onSaveClick:function(a){var b,c;b=a.up("window").down("form");b.updateRecord();b=b.getRecord();(c=b.store)?(b.phantom&&c.add(b),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}})):b.save();a.up("window").close()},showAttributesView:function(a){a=a.up("window").down("form").getRecord();Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedAttributes,
modal:!1,items:{xtype:"attributesView",record:a}}).show()}});Ext.define("Traccar.view.dialog.BaseEdit",{extend:Traccar.view.dialog.Base,controller:"baseEdit",buttons:[{text:Strings.sharedAttributes,handler:"showAttributesView"},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.Device",{extend:Traccar.view.dialog.BaseEdit,title:Strings.sharedDevice,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"textfield",name:"uniqueId",fieldLabel:Strings.deviceIdentifier,allowBlank:!1}]},{xtype:"fieldset",title:Strings.sharedExtra,collapsible:!0,collapsed:!0,items:[{xtype:"combobox",name:"groupId",fieldLabel:Strings.groupParent,store:"Groups",
queryMode:"local",displayField:"name",valueField:"id"},{xtype:"textfield",name:"phone",fieldLabel:Strings.sharedPhone},{xtype:"textfield",name:"model",fieldLabel:Strings.deviceModel},{xtype:"textfield",name:"contact",fieldLabel:Strings.deviceContact},{xtype:"combobox",name:"category",fieldLabel:Strings.deviceCategory,store:"DeviceImages",queryMode:"local",displayField:"name",valueField:"key",editable:!1,listConfig:{getInnerTpl:function(){return'\x3ctable\x3e\x3ctr valign\x3d"middle" \x3e\x3ctd\x3e\x3cdiv align\x3d"center" style\x3d"width:40px;height:40px;" \x3e{[new XMLSerializer().serializeToString(Traccar.DeviceImages.getImageSvg(Traccar.Style.mapColorOnline, false, 0, values.key))]}\x3c/div\x3e\x3c/td\x3e\x3ctd\x3e- {name}\x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e'}}}]}]}});
Ext.define("Traccar.view.permissions.BaseController",{extend:Ext.app.ViewController,alias:"controller.base",init:function(){var a={},b,c;a[this.getView().baseObjectName]=this.getView().baseObject;b=this.getView().linkStoreName;c=this.getView().storeName;b="undefined"===typeof b?c:b;this.getView().setStore(Ext.getStore(c));this.getView().getStore().load({scope:this,callback:function(){Ext.create("Traccar.store."+b).load({params:a,scope:this,callback:function(a,b,c){if(c)for(b=0;b<a.length;b++)c=this.getView().getStore().getById(a[b].getId()),
this.getView().getSelectionModel().select(c,!0,!0)}})}})},onBeforeSelect:function(a,b){var c={};c[this.getView().baseObjectName]=this.getView().baseObject;c[this.getView().linkObjectName]=b.getId();Ext.Ajax.request({scope:this,url:this.getView().urlApi,jsonData:Ext.util.JSON.encode(c),callback:function(c,e,f){e||(a.deselect(b,!0),Traccar.app.showError(f))}})},onBeforeDeselect:function(a,b){var c={};c[this.getView().baseObjectName]=this.getView().baseObject;c[this.getView().linkObjectName]=b.getId();
Ext.Ajax.request({scope:this,method:"DELETE",url:this.getView().urlApi,jsonData:Ext.util.JSON.encode(c),callback:function(c,e,f){e||(a.select(b,!0,!0),Traccar.app.showError(f))}})}});Ext.define("Traccar.view.permissions.Base",{extend:Ext.grid.Panel,controller:"base",selModel:{selType:"checkboxmodel",checkOnly:!0,showHeaderCheckbox:!1},listeners:{beforedeselect:"onBeforeDeselect",beforeselect:"onBeforeSelect"}});
Ext.define("Traccar.view.permissions.DeviceGeofences",{extend:Traccar.view.permissions.Base,xtype:"deviceGeofencesView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal}]}});
Ext.define("Traccar.view.edit.DevicesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.devices",config:{listen:{controller:{"*":{selectreport:"selectReport"},map:{selectdevice:"selectDevice",deselectfeature:"deselectFeature"}},store:{"#Devices":{update:"onUpdateDevice"}}}},objectModel:"Traccar.model.Device",objectDialog:"Traccar.view.dialog.Device",removeTitle:Strings.sharedDevice,init:function(){var a=this,b,c;c=Traccar.app.getPreference("deviceReadonly",!1)&&!Traccar.app.getUser().get("admin");
b=Traccar.app.getPreference("readonly",!1)&&!Traccar.app.getUser().get("admin");this.lookupReference("toolbarAddButton").setDisabled(b||c);setInterval(function(){a.getView().getView().refresh()},Traccar.Style.refreshPeriod)},onGeofencesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,items:{xtype:"deviceGeofencesView",baseObjectName:"deviceId",linkObjectName:"geofenceId",storeName:"Geofences",urlApi:"api/devices/geofences",
baseObject:a.getId()}}).show()},onCommandClick:function(){var a,b,c,d;a=this.getView().getSelectionModel().getSelection()[0];d="online"===a.get("status");a=a.get("id");b=Ext.create("Traccar.model.Command");b.set("deviceId",a);b.set("textChannel",!d);c=Ext.create("Traccar.view.dialog.Command");c.lookupReference("commandType").getStore().getProxy().setExtraParam("deviceId",a);c.down("form").loadRecord(b);c.lookupReference("textChannelCheckBox").setDisabled(!d);c.show()},updateButtons:function(a){var b,
c;c=Traccar.app.getPreference("deviceReadonly",!1)&&!Traccar.app.getUser().get("admin");b=Traccar.app.getPreference("readonly",!1)&&!Traccar.app.getUser().get("admin");a=0===a.getCount();this.lookupReference("toolbarEditButton").setDisabled(a||b||c);this.lookupReference("toolbarRemoveButton").setDisabled(a||b||c);this.lookupReference("toolbarGeofencesButton").setDisabled(a||b);this.lookupReference("deviceCommandButton").setDisabled(a||b)},onSelectionChange:function(a){this.updateButtons(a);0<a.getCount()?
this.fireEvent("selectdevice",a.getLastSelected(),!0):this.fireEvent("deselectfeature")},selectDevice:function(a){this.getView().getSelectionModel().select([a],!1,!0);this.updateButtons(this.getView().getSelectionModel());this.getView().getView().focusRow(a)},selectReport:function(a){void 0!==a&&this.deselectFeature()},onUpdateDevice:function(){this.updateButtons(this.getView().getSelectionModel())},deselectFeature:function(){this.getView().getSelectionModel().deselectAll()}});
Ext.define("Traccar.view.edit.Devices",{extend:Ext.grid.Panel,xtype:"devicesView",controller:"devices",plugins:"gridfilters",store:"VisibleDevices",stateful:!0,stateId:"devices-grid",tbar:{componentCls:"toolbar-header-style",items:[{xtype:"tbtext",html:Strings.deviceTitle,baseCls:"x-panel-header-title-default"},{xtype:"tbfill"},{xtype:"button",disabled:!0,handler:"onAddClick",reference:"toolbarAddButton",glyph:"xf067@FontAwesome",tooltip:Strings.sharedAdd,tooltipType:"title"},{xtype:"button",disabled:!0,
handler:"onEditClick",reference:"toolbarEditButton",glyph:"xf040@FontAwesome",tooltip:Strings.sharedEdit,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onRemoveClick",reference:"toolbarRemoveButton",glyph:"xf00d@FontAwesome",tooltip:Strings.sharedRemove,tooltipType:"title"},{xtype:"button",disabled:!0,handler:"onGeofencesClick",reference:"toolbarGeofencesButton",glyph:"xf21d@FontAwesome",tooltip:Strings.sharedGeofences,tooltipType:"title"},{disabled:!0,handler:"onCommandClick",reference:"deviceCommandButton",
glyph:"xf093@FontAwesome",tooltip:Strings.deviceCommand,tooltipType:"title"}]},listeners:{selectionchange:"onSelectionChange"},viewConfig:{getRowClass:function(a){if(a=a.get("status"))return Ext.getStore("DeviceStatuses").getById(a).get("color")}},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name",filter:"string"},{text:Strings.deviceIdentifier,dataIndex:"uniqueId",hidden:!0},{text:Strings.sharedPhone,dataIndex:"phone",hidden:!0},{text:Strings.deviceModel,
dataIndex:"model",hidden:!0},{text:Strings.deviceContact,dataIndex:"contact",hidden:!0},{text:Strings.groupDialog,dataIndex:"groupId",hidden:!0,filter:{type:"list",labelField:"name",store:"Groups"},renderer:function(a){var b;if(0!==a)return(b=Ext.getStore("Groups").getById(a))?b.get("name"):a}},{text:Strings.deviceStatus,dataIndex:"status",filter:{type:"list",labelField:"name",store:"DeviceStatuses"},renderer:function(a){if(a&&(a=Ext.getStore("DeviceStatuses").getById(a)))return a.get("name")}},{text:Strings.deviceLastUpdate,
dataIndex:"lastUpdate",renderer:function(a){var b;if(a){a=Math.floor((new Date-a)/1E3);b=Math.floor(a/86400);if(1<b)return b+" "+Strings.sharedDays;b=Math.floor(a/3600);return 1<b?b+" "+Strings.sharedHours:Math.floor(a/60)+" "+Strings.sharedMinutes}}}]}});
Ext.define("Traccar.view.dialog.AttributeAlias",{extend:Traccar.view.dialog.Base,controller:"attribute",title:Strings.sharedAttributeAlias,items:{xtype:"form",items:[{xtype:"textfield",name:"attribute",fieldLabel:Strings.sharedAttribute,allowBlank:!1},{xtype:"textfield",name:"alias",fieldLabel:Strings.sharedAlias,allowBlank:!1}]},buttons:[{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,
tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.StateController",{extend:Ext.app.ViewController,alias:"controller.state",config:{listen:{controller:{"*":{selectdevice:"selectDevice",selectreport:"selectReport",updatealiases:"updateAliases",deselectfeature:"deselectFeature"}},store:{"#LatestPositions":{add:"updateLatest",update:"updateLatest"},"#ReportRoute":{clear:"clearReport"},"#AttributeAliases":{add:"updateAliases",update:"updateAliases"}}}},init:function(){var a=!Traccar.app.getUser().get("deviceReadonly")&&!Traccar.app.getPreference("readonly",
!1);this.lookupReference("aliasEditButton").setVisible(a);this.aliasesStore=Ext.getStore("AttributeAliases")},keys:function(){var a,b,c;c={};b="fixTime latitude longitude valid accuracy altitude speed course address protocol".split(" ");for(a=0;a<b.length;a++)c[b[a]]={priority:a,name:Strings["position"+b[a].replace(/^\w/g,function(a){return a.toUpperCase()})]};return c}(),updateLatest:function(a,b){var c;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)this.deviceId===b[c].get("deviceId")&&(this.position=
b[c],this.updatePosition())},formatValue:function(a){return"number"===typeof id?Number(a.toFixed(2)):a},findAttribute:function(a){return a.get("deviceId")===this.position.get("deviceId")&&a.get("attribute")===this.lookupAttribute},updatePosition:function(){var a,b,c,d;b=Ext.getStore("Attributes");b.removeAll();for(c in this.position.data)this.position.data.hasOwnProperty(c)&&void 0!==this.keys[c]&&b.add(Ext.create("Traccar.model.Attribute",{priority:this.keys[c].priority,name:this.keys[c].name,value:Traccar.AttributeFormatter.getFormatter(c)(this.position.get(c))}));
a=this.position.get("attributes");if(a instanceof Object)for(c in a)a.hasOwnProperty(c)&&(this.lookupAttribute=c,d=this.aliasesStore.findBy(this.findAttribute,this),d=-1!==d?this.aliasesStore.getAt(d).get("alias"):c.replace(/^./,function(a){return a.toUpperCase()}),b.add(Ext.create("Traccar.model.Attribute",{priority:1024,name:d,attribute:c,value:Traccar.AttributeFormatter.getFormatter(c)(a[c])})))},selectDevice:function(a){this.deviceId=a.get("id");(a=Ext.getStore("LatestPositions").findRecord("deviceId",
this.deviceId,0,!1,!1,!0))?(this.position=a,this.updatePosition()):(this.position=null,Ext.getStore("Attributes").removeAll())},selectReport:function(a){a instanceof Traccar.model.Position&&(this.deviceId=null,this.position=a,this.updatePosition())},deselectFeature:function(){this.position=this.deviceId=null;Ext.getStore("Attributes").removeAll()},clearReport:function(){this.deviceId||(this.position=null,Ext.getStore("Attributes").removeAll())},onSelectionChange:function(a,b){var c=0<a.getCount()&&
1024===b[0].get("priority");this.lookupReference("aliasEditButton").setDisabled(!c)},onAliasEditClick:function(){var a,b;a=this.getView().getSelectionModel().getSelection()[0];this.lookupAttribute=a.get("attribute");b=this.aliasesStore.findBy(this.findAttribute,this);-1!==b?a=this.aliasesStore.getAt(b):(a=Ext.create("Traccar.model.AttributeAlias",{deviceId:this.position.get("deviceId"),attribute:a.get("attribute")}),a.store=this.aliasesStore);b=Ext.create("Traccar.view.dialog.AttributeAlias");b.down("form").loadRecord(a);
b.show()},updateAliases:function(){this.position&&this.updatePosition()}});
Ext.define("Traccar.view.State",{extend:Ext.grid.Panel,xtype:"stateView",controller:"state",store:"Attributes",stateful:!0,stateId:"state-grid",tbar:{componentCls:"toolbar-header-style",items:[{xtype:"tbtext",html:Strings.stateTitle,baseCls:"x-panel-header-title-default"},{xtype:"tbfill"},{xtype:"button",disabled:!0,handler:"onAliasEditClick",reference:"aliasEditButton",glyph:"xf02b@FontAwesome",tooltip:Strings.sharedEdit,tooltipType:"title"}]},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{minWidth:Traccar.Style.columnWidthNormal,
flex:1},items:[{text:Strings.stateName,dataIndex:"name"},{text:Strings.stateValue,dataIndex:"value",renderer:function(a,b,c){"alarm"===c.get("attribute")&&(b.tdCls="view-color-red");return a}}]}});
Ext.define("Traccar.view.dialog.ReportConfigController",{extend:Ext.app.ViewController,alias:"controller.reportConfig",onSaveClick:function(a){var b;this.getView().callingPanel.deviceId=this.lookupReference("deviceField").getValue();this.getView().callingPanel.groupId=this.lookupReference("groupField").getValue();b=this.lookupReference("eventTypeField").getValue();-1<b.indexOf(Traccar.store.ReportEventTypes.allEvents)?b=[Traccar.store.ReportEventTypes.allEvents]:b.length===this.lookupReference("eventTypeField").getStore().getCount()-
1&&(b=[Traccar.store.ReportEventTypes.allEvents]);this.getView().callingPanel.eventType=b;this.getView().callingPanel.chartType=this.lookupReference("chartTypeField").getValue();this.getView().callingPanel.showMarkers=this.lookupReference("showMarkersField").getValue();this.getView().callingPanel.fromDate=this.lookupReference("fromDateField").getValue();this.getView().callingPanel.fromTime=this.lookupReference("fromTimeField").getValue();this.getView().callingPanel.toDate=this.lookupReference("toDateField").getValue();
this.getView().callingPanel.toTime=this.lookupReference("toTimeField").getValue();this.getView().callingPanel.updateButtons();a.up("window").close()}});Ext.define("Traccar.view.CustomTimeField",{extend:Ext.form.field.Time,xtype:"customTimeField",constructor:function(a){a.format=Traccar.app.getPreference("twelveHourFormat",!1)?Traccar.Style.timeFormat12:Traccar.Style.timeFormat24;this.callParent(arguments)}});
Ext.define("Traccar.view.dialog.ReportConfig",{extend:Traccar.view.dialog.Base,controller:"reportConfig",title:Strings.reportConfigure,items:[{fieldLabel:Strings.reportDevice,xtype:"tagfield",reference:"deviceField",maxWidth:Traccar.Style.formFieldWidth,store:"Devices",valueField:"id",displayField:"name",queryMode:"local"},{fieldLabel:Strings.reportGroup,xtype:"tagfield",reference:"groupField",maxWidth:Traccar.Style.formFieldWidth,store:"Groups",valueField:"id",displayField:"name",queryMode:"local"},
{fieldLabel:Strings.reportEventTypes,xtype:"tagfield",reference:"eventTypeField",maxWidth:Traccar.Style.formFieldWidth,store:"ReportEventTypes",hidden:!0,valueField:"type",displayField:"name",queryMode:"local"},{fieldLabel:Strings.reportChartType,xtype:"combobox",reference:"chartTypeField",store:"ReportChartTypes",hidden:!0,value:"speedConverted",valueField:"key",displayField:"name",queryMode:"local"},{fieldLabel:Strings.reportShowMarkers,xtype:"checkbox",reference:"showMarkersField",inputValue:!0,
uncheckedValue:!1,value:!1},{xtype:"fieldcontainer",layout:"vbox",fieldLabel:Strings.reportFrom,items:[{xtype:"datefield",reference:"fromDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date((new Date).getTime()-18E5)},{xtype:"customTimeField",reference:"fromTimeField",value:new Date((new Date).getTime()-18E5)}]},{xtype:"fieldcontainer",layout:"vbox",fieldLabel:Strings.reportTo,items:[{xtype:"datefield",reference:"toDateField",startDay:Traccar.Style.weekStartDay,
format:Traccar.Style.dateFormat,value:new Date},{xtype:"customTimeField",reference:"toTimeField",value:new Date}]}],buttons:[{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.ReportController",{extend:Ext.app.ViewController,alias:"controller.report",config:{listen:{controller:{"*":{selectdevice:"selectDevice",showsingleevent:"showSingleEvent",deselectfeature:"deselectFeature"},map:{selectreport:"selectReport"}},store:{"#ReportEvents":{add:"loadEvents",load:"loadEvents"},"#ReportRoute":{load:"loadRoute"}}}},hideReports:function(){Traccar.app.showReports(!1)},getGrid:function(){return this.getView().getComponent("grid")},getChart:function(){return this.getView().getComponent("chart")},
onConfigureClick:function(){var a=Ext.create("Traccar.view.dialog.ReportConfig");a.lookupReference("eventTypeField").setHidden("events"!==this.lookupReference("reportTypeField").getValue());a.lookupReference("chartTypeField").setHidden("chart"!==this.lookupReference("reportTypeField").getValue());a.callingPanel=this;a.lookupReference("deviceField").setValue(this.deviceId);a.lookupReference("groupField").setValue(this.groupId);void 0!==this.eventType?a.lookupReference("eventTypeField").setValue(this.eventType):
a.lookupReference("eventTypeField").setValue([Traccar.store.ReportEventTypes.allEvents]);void 0!==this.chartType&&a.lookupReference("chartTypeField").setValue(this.chartType);void 0!==this.showMarkers&&a.lookupReference("showMarkersField").setValue(this.showMarkers);void 0!==this.fromDate&&a.lookupReference("fromDateField").setValue(this.fromDate);void 0!==this.fromTime&&a.lookupReference("fromTimeField").setValue(this.fromTime);void 0!==this.toDate&&a.lookupReference("toDateField").setValue(this.toDate);
void 0!==this.toTime&&a.lookupReference("toTimeField").setValue(this.toTime);a.show()},updateButtons:function(){var a,b,c;a=this.lookupReference("reportTypeField").getValue();b=this.deviceId&&0!==this.deviceId.length||this.groupId&&0!==this.groupId.length;c=this.fromDate&&this.fromTime&&this.toDate&&this.toTime;b=!a||!b||!c;this.lookupReference("showButton").setDisabled(b);this.lookupReference("exportButton").setDisabled("chart"===a||b)},onReportClick:function(a){var b,c,d;this.getGrid().getSelectionModel().deselectAll();
if((b=this.lookupReference("reportTypeField").getValue())&&(this.deviceId||this.groupId))c=new Date(this.fromDate.getFullYear(),this.fromDate.getMonth(),this.fromDate.getDate(),this.fromTime.getHours(),this.fromTime.getMinutes(),this.fromTime.getSeconds(),this.fromTime.getMilliseconds()),d=new Date(this.toDate.getFullYear(),this.toDate.getMonth(),this.toDate.getDate(),this.toTime.getHours(),this.toTime.getMinutes(),this.toTime.getSeconds(),this.toTime.getMilliseconds()),"showButton"===a.reference?
("chart"===b?(a=this.getChart().getStore(),this.getChart().setSeries([])):a=this.getGrid().getStore(),a.showMarkers=this.showMarkers,a.load({params:{deviceId:this.deviceId,groupId:this.groupId,type:this.eventType,from:c.toISOString(),to:d.toISOString()}})):"exportButton"===a.reference&&(a=this.getGrid().getStore().getProxy().url,this.downloadFile(a,{deviceId:this.deviceId,groupId:this.groupId,type:this.eventType,from:Ext.Date.format(c,"c"),to:Ext.Date.format(d,"c")}))},onClearClick:function(){var a=
this.lookupReference("reportTypeField").getValue();this.clearReport(a)},clearReport:function(a){this.getGrid().getStore().removeAll();("trips"===a||"events"===a)&&Ext.getStore("ReportRoute").removeAll();"chart"===a&&this.getChart().getStore().removeAll()},onSelectionChange:function(a){0<a.getCount()&&(a=a.getLastSelected(),this.fireEvent("selectreport",a,!0),a instanceof Traccar.model.ReportTrip&&this.selectTrip(a),a instanceof Traccar.model.Event&&this.selectEvent(a))},selectDevice:function(a){a&&
this.getGrid().getSelectionModel().deselectAll()},selectReport:function(a){var b=this.lookupReference("reportTypeField").getValue();a instanceof Traccar.model.Position&&("route"===b?(this.getGrid().getSelectionModel().select([a],!1,!0),this.getGrid().getView().focusRow(a)):"events"===b&&(a=this.getGrid().getStore().findRecord("positionId",a.get("id"),0,!1,!0,!0),this.getGrid().getSelectionModel().select([a],!1,!0),this.getGrid().getView().focusRow(a)))},deselectFeature:function(){"trips"!==this.lookupReference("reportTypeField").getValue()&&
this.getGrid().getSelectionModel().deselectAll()},selectTrip:function(a){var b,c;b=new Date(a.get("startTime"));c=new Date(a.get("endTime"));Ext.getStore("ReportRoute").removeAll();Ext.getStore("ReportRoute").showMarkers=this.showMarkers;Ext.getStore("ReportRoute").load({params:{deviceId:a.get("deviceId"),from:b.toISOString(),to:c.toISOString()}})},selectEvent:function(a){a.get("positionId")&&(a=Ext.getStore("ReportRoute").getById(a.get("positionId")))&&this.fireEvent("selectreport",a,!0)},loadEvents:function(a,
b){var c,d,e=[];Ext.getStore("ReportRoute").removeAll();for(c=0;c<b.length;c++)d=b[c],d.get("positionId")&&e.push(d.get("positionId"));0<e.length&&Ext.getStore("Positions").load({params:{id:e},scope:this,callback:function(a,b,c){c&&(Ext.getStore("ReportRoute").showMarkers=this.showMarkers,Ext.getStore("ReportRoute").add(a),1===a.length&&this.fireEvent("selectreport",a[0],!1))}})},loadRoute:function(a){var b,c,d;if("chart"===this.lookupReference("reportTypeField").getValue()){this.getChart().getAxes()[0].setTitle(Ext.getStore("ReportChartTypes").findRecord("key",
this.chartType).get("name"));c=[];b=a.collect("deviceId");for(a=0;a<b.length;a++)d=new Ext.create("Ext.data.ChainedStore",{source:"ReportRoute",filters:[{property:"deviceId",value:b[a]}]}),c.push({type:"line",store:d,yField:this.chartType,xField:"fixTime",highlightCfg:{scaling:Traccar.Style.chartMarkerHighlightScaling},colors:[Traccar.app.getReportColor(b[a])],marker:{type:"circle",radius:Traccar.Style.chartMarkerRadius,fill:Traccar.app.getReportColor(b[a])}});this.getChart().setSeries(c)}},onChartMarkerClick:function(a,
b){this.fireEvent("selectreport",b.record,!0)},showSingleEvent:function(a){this.lookupReference("reportTypeField").setValue("events");Ext.getStore("Events").load({id:a,scope:this,callback:function(a,c,d){d&&(Ext.getStore("ReportEvents").add(a),0<a.length&&(a[0].get("positionId")||(Traccar.app.isMobile()?Traccar.app.showReports(!0):this.getView().expand()),this.getGrid().getSelectionModel().select([a[0]],!1,!0),this.getGrid().getView().focusRow(a[0])))}})},downloadFile:function(a,b){Ext.Ajax.request({url:a,
method:"GET",params:b,headers:{Accept:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"},binary:!0,success:function(a){var b,e,f,g;b=a.getResponseHeader("Content-Disposition");b=b.slice(b.indexOf("\x3d")+1,b.length);e=a.getResponseHeader("Content-Type");a=new Blob([a.responseBytes],{type:e});"undefined"!==typeof window.navigator.msSaveBlob?window.navigator.msSaveBlob(a,b):(f=window.URL||window.webkitURL,g=f.createObjectURL(a),b&&Ext.dom.Helper.append(Ext.getBody(),{tag:"a",href:g,
download:b}).click(),setTimeout(function(){f.revokeObjectURL(g)},100))}})},onTypeChange:function(a,b,c){null!==c&&this.clearReport(c);"route"===b?(this.getGrid().reconfigure("ReportRoute",this.routeColumns),this.getView().getLayout().setActiveItem("grid")):"events"===b?(this.getGrid().reconfigure("ReportEvents",this.eventsColumns),this.getView().getLayout().setActiveItem("grid")):"summary"===b?(this.getGrid().reconfigure("ReportSummary",this.summaryColumns),this.getView().getLayout().setActiveItem("grid")):
"trips"===b?(this.getGrid().reconfigure("ReportTrips",this.tripsColumns),this.getView().getLayout().setActiveItem("grid")):"chart"===b&&this.getView().getLayout().setActiveItem("chart");this.updateButtons()},routeColumns:[{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.positionValid,dataIndex:"valid",renderer:Traccar.AttributeFormatter.getFormatter("valid")},{text:Strings.positionFixTime,dataIndex:"fixTime",xtype:"datecolumn",
renderer:Traccar.AttributeFormatter.getFormatter("fixTime")},{text:Strings.positionLatitude,dataIndex:"latitude",renderer:Traccar.AttributeFormatter.getFormatter("latitude")},{text:Strings.positionLongitude,dataIndex:"longitude",renderer:Traccar.AttributeFormatter.getFormatter("latitude")},{text:Strings.positionAltitude,dataIndex:"altitude",renderer:Traccar.AttributeFormatter.getFormatter("altitude")},{text:Strings.positionSpeed,dataIndex:"speed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},
{text:Strings.positionAddress,dataIndex:"address",renderer:Traccar.AttributeFormatter.getFormatter("address")}],eventsColumns:[{text:Strings.positionFixTime,dataIndex:"serverTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("serverTime")},{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.sharedType,dataIndex:"type",renderer:function(a){return Traccar.app.getEventString(a)}},{text:Strings.sharedGeofence,
dataIndex:"geofenceId",renderer:function(a){if(0!==a)return Ext.getStore("Geofences").getById(a).get("name")}}],summaryColumns:[{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.sharedDistance,dataIndex:"distance",renderer:Traccar.AttributeFormatter.getFormatter("distance")},{text:Strings.reportAverageSpeed,dataIndex:"averageSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.reportMaximumSpeed,
dataIndex:"maxSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.reportEngineHours,dataIndex:"engineHours",renderer:Traccar.AttributeFormatter.getFormatter("hours")}],tripsColumns:[{text:Strings.reportDeviceName,dataIndex:"deviceId",renderer:Traccar.AttributeFormatter.getFormatter("deviceId")},{text:Strings.reportStartTime,dataIndex:"startTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("startTime")},{text:Strings.reportStartAddress,dataIndex:"startAddress",
renderer:Traccar.AttributeFormatter.getFormatter("address")},{text:Strings.reportEndTime,dataIndex:"endTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.getFormatter("endTime")},{text:Strings.reportEndAddress,dataIndex:"endAddress",renderer:Traccar.AttributeFormatter.getFormatter("address")},{text:Strings.sharedDistance,dataIndex:"distance",renderer:Traccar.AttributeFormatter.getFormatter("distance")},{text:Strings.reportAverageSpeed,dataIndex:"averageSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},
{text:Strings.reportMaximumSpeed,dataIndex:"maxSpeed",renderer:Traccar.AttributeFormatter.getFormatter("speed")},{text:Strings.reportDuration,dataIndex:"duration",renderer:Traccar.AttributeFormatter.getFormatter("duration")},{text:Strings.reportSpentFuel,dataIndex:"spentFuel",renderer:Traccar.AttributeFormatter.getFormatter("spentFuel")}]});
Ext.define("Traccar.view.Report",{extend:Ext.panel.Panel,xtype:"reportView",controller:"report",title:Strings.reportTitle,tools:[{type:"close",tooltip:Strings.sharedHide,handler:"hideReports"}],tbar:{scrollable:!0,items:[{xtype:"tbtext",html:Strings.sharedType},{xtype:"combobox",reference:"reportTypeField",store:"ReportTypes",displayField:"name",valueField:"key",editable:!1,listeners:{change:"onTypeChange"}},"-",{text:Strings.reportConfigure,handler:"onConfigureClick"},"-",{text:Strings.reportShow,
reference:"showButton",disabled:!0,handler:"onReportClick"},{text:Strings.reportExport,reference:"exportButton",disabled:!0,handler:"onReportClick"},{text:Strings.reportClear,handler:"onClearClick"}]},layout:"card",items:[{xtype:"grid",itemId:"grid",listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[]},style:Traccar.Style.reportGridStyle},{xtype:"cartesian",itemId:"chart",plugins:{ptype:"chartitemevents",moveEvents:!0},store:"ReportRoute",
axes:[{title:Strings.reportChart,type:"numeric",position:"left"},{type:"time",position:"bottom",fields:["fixTime"]}],listeners:{itemclick:"onChartMarkerClick"},insetPadding:Traccar.Style.chartPadding}]});
Ext.define("Traccar.view.map.BaseMap",{extend:Ext.panel.Panel,xtype:"baseMapView",layout:"fit",getMap:function(){return this.map},getMapView:function(){return this.mapView},initMap:function(){var a,b,c,d,e;a=Traccar.app.getServer();b=Traccar.app.getPreference("map",null);c=a.get("bingKey");a="custom"===b?new ol.layer.Tile({source:new ol.source.XYZ({url:a.get("mapUrl"),attributions:[new ol.Attribution({html:""})]})}):"bingRoad"===b?new ol.layer.Tile({source:new ol.source.BingMaps({key:c,imagerySet:"Road"})}):
"bingAerial"===b?new ol.layer.Tile({source:new ol.source.BingMaps({key:c,imagerySet:"Aerial"})}):"bingHybrid"===b?new ol.layer.Tile({source:new ol.source.BingMaps({key:c,imagerySet:"AerialWithLabels"})}):"carto"===b?new ol.layer.Tile({source:new ol.source.XYZ({url:"https://cartodb-basemaps-{a-d}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png",attributions:[new ol.Attribution({html:['\x26copy; \x3ca href\x3d"http://www.openstreetmap.org/copyright"\x3eOpenStreetMap\x3c/a\x3e contributors, \x26copy; \x3ca href\x3d"https://carto.com/attributions"\x3eCARTO\x3c/a\x3e']})]})}):
"baidu"===b?new ol.layer.Tile({source:new ol.source.XYZ({projection:"BD-MC",tileUrlFunction:function(a){var b=a[0],c=a[1];a=a[2];var d;d=((c<<b)+a)%5;0>c&&(c="M"+-c);0>a&&(a="M"+-a);return"http://online{}.map.bdimg.com/onlinelabel/?qt\x3dtile\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}\x26styles\x3dpl".replace("{}",0>d?d+5:d).replace("{x}",c).replace("{y}",a).replace("{z}",b)},tileGrid:new ol.tilegrid.TileGrid({extent:ol.proj.transformExtent([-180,-74,180,74],"EPSG:4326","BD-MC"),origin:[0,0],minZoom:3,resolutions:[262144,
131072,65536,32768,16384,8192,4096,2048,1024,512,256,128,64,32,16,8,4,2,1,0.5]}),attributions:[new ol.Attribution({html:'\x26copy; \x3ca href\x3d"http://map.baidu.com/"\x3eBaidu\x3c/a\x3e'})]})}):"yandexMap"===b?new ol.layer.Tile({source:new ol.source.XYZ({url:"https://vec0{1-4}.maps.yandex.net/tiles?l\x3dmap\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}",projection:"EPSG:3395",attributions:[new ol.Attribution({html:'\x26copy; \x3ca href\x3d"https://yandex.com/maps/"\x3eYandex\x3c/a\x3e'})]})}):"yandexSat"===
b?new ol.layer.Tile({source:new ol.source.XYZ({url:"https://sat0{1-4}.maps.yandex.net/tiles?l\x3dsat\x26x\x3d{x}\x26y\x3d{y}\x26z\x3d{z}",projection:"EPSG:3395",attributions:[new ol.Attribution({html:'\x26copy; \x3ca href\x3d"https://yandex.com/maps/"\x3eYandex\x3c/a\x3e'})]})}):new ol.layer.Tile({source:new ol.source.OSM({})});b=Traccar.app.getPreference("latitude",Traccar.Style.mapDefaultLat);c=Traccar.app.getPreference("longitude",Traccar.Style.mapDefaultLon);d=Traccar.app.getPreference("zoom",
Traccar.Style.mapDefaultZoom);this.mapView=new ol.View({center:ol.proj.fromLonLat([c,b]),zoom:d,maxZoom:Traccar.Style.mapMaxZoom});this.map=new ol.Map({target:this.body.dom.id,layers:[a],view:this.mapView});e=this.map.getTarget();"string"===typeof e&&(e=Ext.get(e).dom);this.map.on("pointermove",function(a){e.style.cursor=this.forEachFeatureAtPixel(a.pixel,function(){return!0})?"pointer":""});this.map.on("click",function(a){this.map.hasFeatureAtPixel(a.pixel,{layerFilter:function(a){return!a.get("name")}})?
this.map.forEachFeatureAtPixel(a.pixel,function(a){this.fireEvent("selectfeature",a)}.bind(this)):this.fireEvent("deselectfeature")},this)},listeners:{afterrender:function(){this.initMap()},resize:function(){this.map.updateSize()}}},function(){proj4.defs("BD-MC","+proj\x3dmerc +lon_0\x3d0 +units\x3dm +ellps\x3dclrk66 +no_defs");proj4.defs("EPSG:3395","+proj\x3dmerc +lon_0\x3d0 +k\x3d1 +x_0\x3d0 +y_0\x3d0 +datum\x3dWGS84 +units\x3dm +no_defs");ol.proj.get("EPSG:3395").setExtent([-2.0037508342789244E7,
-2.0037508342789244E7,2.0037508342789244E7,2.0037508342789244E7])});
Ext.define("Traccar.DeviceImages",{singleton:!0,getImageSvg:function(a,b,c,d){var e,f,g,h,j;d=Ext.getStore("DeviceImages").findRecord("key",d||"default",0,!1,!1,!0);(f=Ext.clone(d.get("svg")))||(f=this.cloneDocument(d.get("svg")));g=parseFloat(f.documentElement.getAttribute("width"));h=parseFloat(f.documentElement.getAttribute("height"));j=d.get("fillId");Ext.isArray(j)||(j=[j]);for(e=0;e<j.length;e++)f.getElementById(j[e]).style.fill=a;a="rotate("+c+" "+g/2+" "+h/2+")";f.getElementById(d.get("rotateId")).setAttribute("transform",
a);b?(g*=Traccar.Style.mapScaleSelected,h*=Traccar.Style.mapScaleSelected,b="scale("+Traccar.Style.mapScaleSelected+") "):(g*=Traccar.Style.mapScaleNormal,h*=Traccar.Style.mapScaleNormal,b="scale("+Traccar.Style.mapScaleNormal+") ");d.get("scaleId")!==d.get("rotateId")?f.getElementById(d.get("scaleId")).setAttribute("transform",b):f.getElementById(d.get("scaleId")).setAttribute("transform",b+" "+a);f.documentElement.setAttribute("width",g);f.documentElement.setAttribute("height",h);f.documentElement.setAttribute("viewBox",
"0 0 "+g+" "+h);return f},formatSrc:function(a){return"data:image/svg+xml;charset\x3dutf-8,"+encodeURIComponent((new XMLSerializer).serializeToString(a.documentElement))},cloneDocument:function(a){var b;b=a.implementation.createDocument(a.namespaceURI,null,null);a=b.importNode(a.documentElement,!0);b.appendChild(a);return b},getImageIcon:function(a,b,c,d){var e,f,g;e=this.getImageSvg(a,b,c,d);f=parseFloat(e.documentElement.getAttribute("width"));g=parseFloat(e.documentElement.getAttribute("height"));
e=new ol.style.Icon({imgSize:[f,g],src:this.formatSrc(e)});e.fill=a;e.zoom=b;e.angle=c;e.category=d;return e}});
Ext.define("Traccar.view.map.MapMarkerController",{extend:Ext.app.ViewController,alias:"controller.mapMarker",config:{listen:{controller:{"*":{selectdevice:"selectDevice",selectreport:"selectReport"},devices:{deselectfeature:"deselectDevice"}},store:{"#Devices":{add:"updateDevice",update:"updateDevice",remove:"removeDevice"},"#VisibleDevices":{add:"updateVisibleDevices",update:"updateVisibleDevices",remove:"updateVisibleDevices",refresh:"filterDevices"},"#LatestPositions":{add:"updateLatest",update:"updateLatest"},
"#ReportRoute":{add:"addReportMarkers",load:"loadReport",clear:"clearReport"}},component:{"#":{selectfeature:"selectFeature",deselectfeature:"deselectFeature"}}}},init:function(){this.latestMarkers={};this.reportMarkers={};this.accuracyCircles={};this.liveRoutes={};this.liveRouteLength=Traccar.app.getAttributePreference("web.liveRouteLength",10)},getAreaStyle:function(a,b){var c,d;b?(c=ol.color.asArray(b),d=b):(c=ol.color.asArray(Traccar.Style.mapGeofenceColor),d=Traccar.Style.mapGeofenceColor);c[3]=
Traccar.Style.mapGeofenceOverlayOpacity;c={fill:new ol.style.Fill({color:c}),stroke:new ol.style.Stroke({color:d,width:Traccar.Style.mapGeofenceWidth})};a&&(c.text=new ol.style.Text({text:a,fill:new ol.style.Fill({color:Traccar.Style.mapGeofenceTextColor}),stroke:new ol.style.Stroke({color:Traccar.Style.mapTextStrokeColor,width:Traccar.Style.mapTextStrokeWidth}),font:Traccar.Style.mapTextFont}));return new ol.style.Style(c)},getDeviceColor:function(a){switch(a.get("status")){case "online":return Traccar.Style.mapColorOnline;
case "offline":return Traccar.Style.mapColorOffline;default:return Traccar.Style.mapColorUnknown}},updateDevice:function(a,b){var c,d,e,f;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)if(d=b[c],e=d.get("id"),e in this.latestMarkers){e=this.latestMarkers[e];f=e.getStyle();if(f.getImage().fill!==this.getDeviceColor(d)||f.getImage().category!==d.get("category"))this.updateDeviceMarker(f,this.getDeviceColor(d),d.get("category")),e.changed();f.getText().getText()!==d.get("name")&&(f.getText().setText(d.get("name")),
e.changed())}},removeDevice:function(a,b){var c,d;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)d=b[c].get("id"),this.latestMarkers[d]&&(this.getView().getMarkersSource().removeFeature(this.latestMarkers[d]),delete this.latestMarkers[d]),this.accuracyCircles[d]&&(this.getView().getAccuracySource().removeFeature(this.accuracyCircles[d]),delete this.accuracyCircles[d]),this.liveRoutes[d]&&(this.getView().getLiveRouteSource().removeFeature(this.liveRoutes[d]),delete this.liveRoutes[d])},updateLatest:function(a,
b){var c,d,e;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)if(d=b[c],e=Ext.getStore("Devices").getById(d.get("deviceId")))this.updateAccuracy(d,e),this.updateLatestMarker(d,e),this.updateLiveRoute(d,e)},updateAccuracy:function(a,b){var c,d,e,f;d=this.getView().getMapView();e=this.accuracyCircles[a.get("deviceId")];a.get("accuracy")?(f=d.getProjection(),c=ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]),f=ol.proj.getPointResolution(f,d.getResolution(),c),d=a.get("accuracy")/ol.proj.METERS_PER_UNIT.m*
d.getResolution()/f,e?(e.getGeometry().setCenter(c),e.getGeometry().setRadius(d)):(e=new ol.Feature(new ol.geom.Circle(c,d)),e.setStyle(this.getAreaStyle(null,Traccar.Style.mapAccuracyColor)),e.setId(a.get("deviceId")),this.accuracyCircles[a.get("deviceId")]=e,this.isDeviceVisible(b)&&this.getView().getAccuracySource().addFeature(e))):(e&&this.getView().getAccuracySource().getFeatureById(e.getId())&&this.getView().getAccuracySource().removeFeature(e),delete this.accuracyCircles[a.get("deviceId")])},
updateLatestMarker:function(a,b){var c,d,e,f;c=new ol.geom.Point(ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]));d=a.get("deviceId");d in this.latestMarkers?(e=this.latestMarkers[d],f=e.getStyle(),f.getImage().angle!==a.get("course")&&this.rotateMarker(f,a.get("course")),e.setGeometry(c)):(e=new ol.Feature(c),e.set("record",b),f=this.getLatestMarker(this.getDeviceColor(b),a.get("course"),b.get("category")),f.getText().setText(b.get("name")),e.setStyle(f),e.setId(b.get("id")),this.latestMarkers[d]=
e,this.isDeviceVisible(b)&&this.getView().getMarkersSource().addFeature(e));e===this.selectedMarker&&this.lookupReference("deviceFollowButton").pressed&&this.getView().getMapView().setCenter(e.getGeometry().getCoordinates())},updateLiveRoute:function(a,b){var c,d,e,f;c=a.get("deviceId");c in this.liveRoutes?(d=this.liveRoutes[c].getGeometry().getCoordinates(),e=d[d.length-1],f=ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]),e[0]===f[0]&&e[1]===f[1]||(d.length>=this.liveRouteLength&&d.shift(),
d.push(f),this.liveRoutes[c].getGeometry().setCoordinates(d))):(d=new ol.Feature({geometry:new ol.geom.LineString([ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")])])}),d.setStyle(this.getRouteStyle(c)),d.setId(a.get("deviceId")),this.liveRoutes[c]=d,this.isDeviceVisible(b)&&this.getView().getMarkersSource().addFeature(d))},loadReport:function(a,b){var c,d;this.addReportMarkers(a,b);this.reportRoute=[];for(c=0;c<b.length;c++){d=b[c];d=ol.proj.fromLonLat([d.get("longitude"),d.get("latitude")]);
if(0===c||b[c].get("deviceId")!==b[c-1].get("deviceId"))this.reportRoute.push(new ol.Feature({geometry:new ol.geom.LineString([])})),this.reportRoute[this.reportRoute.length-1].setStyle(this.getRouteStyle(b[c].get("deviceId"))),this.getView().getRouteSource().addFeature(this.reportRoute[this.reportRoute.length-1]);this.reportRoute[this.reportRoute.length-1].getGeometry().appendCoordinate(d)}},addReportMarker:function(a){var b,c;b=ol.proj.fromLonLat([a.get("longitude"),a.get("latitude")]);b=new ol.geom.Point(b);
b=new ol.Feature(b);b.set("record",a);c=this.getReportMarker(a.get("deviceId"),a.get("course"));b.setStyle(c);this.reportMarkers[a.get("id")]=b;this.getView().getMarkersSource().addFeature(b)},addReportMarkers:function(a,b){var c;this.clearReport();for(c=0;c<b.length;c++)a.showMarkers&&this.addReportMarker(b[c]);this.zoomToAllPositions(b)},clearReport:function(){var a,b;if(this.reportRoute){for(b=0;b<this.reportRoute.length;b++)this.getView().getRouteSource().removeFeature(this.reportRoute[b]);this.reportRoute=
null}if(this.reportMarkers){for(a in this.reportMarkers)this.reportMarkers.hasOwnProperty(a)&&this.getView().getMarkersSource().removeFeature(this.reportMarkers[a]);this.reportMarkers={}}this.selectedMarker&&this.selectedMarker.get("record")instanceof Traccar.model.Position&&(this.selectedMarker=null)},getRouteStyle:function(a){return new ol.style.Style({stroke:new ol.style.Stroke({color:Traccar.app.getReportColor(a),width:Traccar.Style.mapRouteWidth})})},getMarkerStyle:function(a,b,c,d){a=Traccar.DeviceImages.getImageIcon(b,
a,c,d);return new ol.style.Style({image:a,text:new ol.style.Text({textBaseline:"bottom",fill:new ol.style.Fill({color:Traccar.Style.mapTextColor}),stroke:new ol.style.Stroke({color:Traccar.Style.mapTextStrokeColor,width:Traccar.Style.mapTextStrokeWidth}),offsetY:-a.getSize()[1]/2-Traccar.Style.mapTextOffset,font:Traccar.Style.mapTextFont})})},getLatestMarker:function(a,b,c){return this.getMarkerStyle(!1,a,b,c)},getReportMarker:function(a,b){return this.getMarkerStyle(!1,Traccar.app.getReportColor(a),
b,"arrow")},resizeMarker:function(a,b){var c,d;c=Traccar.DeviceImages.getImageIcon(a.getImage().fill,b,a.getImage().angle,a.getImage().category);d=a.getText();d.setOffsetY(-c.getSize()[1]/2-Traccar.Style.mapTextOffset);a.setText(d);a.setImage(c)},rotateMarker:function(a,b){a.setImage(Traccar.DeviceImages.getImageIcon(a.getImage().fill,a.getImage().zoom,b,a.getImage().category))},updateDeviceMarker:function(a,b,c){b=Traccar.DeviceImages.getImageIcon(b,a.getImage().zoom,a.getImage().angle,c);c=a.getText();
c.setOffsetY(-b.getSize()[1]/2-Traccar.Style.mapTextOffset);a.setText(c);a.setImage(b)},selectMarker:function(a,b){this.selectedMarker&&(!Ext.getStore("ReportRoute").showMarkers&&this.selectedMarker.get("record")instanceof Traccar.model.Position?(this.getView().getMarkersSource().removeFeature(this.selectedMarker),delete this.reportMarkers[this.selectedMarker.get("record").get("id")]):(this.resizeMarker(this.selectedMarker.getStyle(),!1),this.selectedMarker.getStyle().setZIndex(0),this.selectedMarker.changed()));
a&&(this.resizeMarker(a.getStyle(),!0),a.getStyle().setZIndex(1),a.changed(),b&&this.getView().getMapView().setCenter(a.getGeometry().getCoordinates()));this.selectedMarker=a},selectDevice:function(a,b){this.selectMarker(this.latestMarkers[a.get("id")],b)},selectReport:function(a,b){a instanceof Traccar.model.Position&&(Ext.getStore("ReportRoute").showMarkers||this.addReportMarker(a),this.selectMarker(this.reportMarkers[a.get("id")],b))},selectFeature:function(a){(a=a.get("record"))&&(a instanceof
Traccar.model.Device?this.fireEvent("selectdevice",a,!1):this.fireEvent("selectreport",a,!1))},deselectFeature:function(){this.deselectDevice();this.fireEvent("deselectfeature")},deselectDevice:function(){this.selectMarker(null,!1)},zoomToAllPositions:function(a){var b,c,d,e,f,g;for(b=0;b<a.length;b++)c=ol.proj.fromLonLat([a[b].get("longitude"),a[b].get("latitude")]),0===b?(d=f=c[0],e=g=c[1]):(d=Math.min(c[0],d),e=Math.min(c[1],e),f=Math.max(c[0],f),g=Math.max(c[1],g));d!==f||e!==g?this.getView().getMapView().fit([d,
e,f,g]):c&&this.getView().getMapView().fit(new ol.geom.Point(c))},updateVisibleDevices:function(a,b){var c,d;Ext.isArray(b)||(b=[b]);for(c=0;c<b.length;c++)d=b[c],d.get("id")in this.latestMarkers&&this.updateDeviceVisibility(d)},isDeviceVisible:function(a){return Ext.getStore("VisibleDevices").contains(a)},updateDeviceVisibility:function(a){var b,c,d;b=a.get("id");d=this.latestMarkers[b];c=this.accuracyCircles[b];b=this.liveRoutes[b];this.isDeviceVisible(a)?(d&&!this.getView().getMarkersSource().getFeatureById(d.getId())&&
this.getView().getMarkersSource().addFeature(d),c&&!this.getView().getAccuracySource().getFeatureById(c.getId())&&this.getView().getAccuracySource().addFeature(c),b&&!this.getView().getLiveRouteSource().getFeatureById(b.getId())&&this.getView().getLiveRouteSource().addFeature(b)):(d&&this.getView().getMarkersSource().getFeatureById(d.getId())&&this.getView().getMarkersSource().removeFeature(d),c&&this.getView().getAccuracySource().getFeatureById(c.getId())&&this.getView().getAccuracySource().removeFeature(c),
b&&this.getView().getLiveRouteSource().getFeatureById(b.getId())&&this.getView().getLiveRouteSource().removeFeature(b))},filterDevices:function(){Ext.getStore("Devices").each(this.updateDeviceVisibility,this,!1)}});
Ext.define("Traccar.GeofenceConverter",{singleton:!0,wktToGeometry:function(a,b){var c,d,e=[],f,g,h;if(0===b.lastIndexOf("POLYGON",0)){if(f=b.match(/\([^\(\)]+\)/),null!==f&&(f=f[0].match(/-?\d+\.?\d*/g),null!==f)){c=a.getProjection();for(d=0;d<f.length;d+=2)g=Number(f[d]),h=Number(f[d+1]),e.push(ol.proj.transform([h,g],"EPSG:4326",c));c=new ol.geom.Polygon([e])}}else if(0===b.lastIndexOf("CIRCLE",0))f=b.match(/\([^\(\)]+\)/),null!==f&&(f=f[0].match(/-?\d+\.?\d*/g),null!==f&&(c=a.getProjection(),
e=ol.proj.transform([Number(f[1]),Number(f[0])],"EPSG:4326",c),d=a.getResolution(),c=ol.proj.getPointResolution(c,d,e),f=Number(f[2])/ol.proj.METERS_PER_UNIT.m*(d/c),c=new ol.geom.Circle(e,f)));else if(0===b.lastIndexOf("LINESTRING",0)&&(f=b.match(/\([^\(\)]+\)/),null!==f&&(f=f[0].match(/-?\d+\.?\d*/g),null!==f))){c=a.getProjection();for(d=0;d<f.length;d+=2)g=Number(f[d]),h=Number(f[d+1]),e.push(ol.proj.transform([h,g],"EPSG:4326",c));c=new ol.geom.LineString(e)}return c},geometryToWkt:function(a,
b){var c,d,e;if(b instanceof ol.geom.Circle)c=b.getCenter(),d=b.getRadius(),d=[c[0]+d,c[1]],c=ol.proj.transform(c,a,"EPSG:4326"),e=new ol.Sphere(6378137),d=e.haversineDistance(c,ol.proj.transform(d,a,"EPSG:4326")),c="CIRCLE ("+(c[1]+" "+c[0]+", "),c+=Number(d.toFixed(1))+")";else if(b instanceof ol.geom.Polygon){b.transform(a,"EPSG:4326");e=b.getCoordinates();c="POLYGON((";for(d=0;d<e[0].length;d+=1)c+=e[0][d][1]+" "+e[0][d][0]+", ";c=c.substring(0,c.length-2)+"))"}else if(b instanceof ol.geom.LineString){b.transform(a,
"EPSG:4326");e=b.getCoordinates();c="LINESTRING (";for(d=0;d<e.length;d+=1)c+=e[d][1]+" "+e[d][0]+", ";c=c.substring(0,c.length-2)+")"}return c}});
Ext.define("Traccar.view.map.MapController",{extend:Traccar.view.map.MapMarkerController,alias:"controller.map",config:{listen:{controller:{"*":{mapstaterequest:"getMapState",zoomtoalldevices:"zoomToAllDevices"}},store:{"#Geofences":{load:"updateGeofences",add:"updateGeofences",update:"updateGeofences",remove:"updateGeofences"}}}},init:function(){this.callParent();this.lookupReference("showReportsButton").setVisible(Traccar.app.isMobile())},showReports:function(){Traccar.app.showReports(!0)},onFollowClick:function(a,
b){b&&this.selectedMarker&&this.getView().getMapView().setCenter(this.selectedMarker.getGeometry().getCoordinates())},showLiveRoutes:function(a){this.getView().getLiveRouteLayer().setVisible(a.pressed)},getMapState:function(){var a,b;a=this.getView().getMapView().getProjection();b=ol.proj.transform(this.getView().getMapView().getCenter(),a,"EPSG:4326");a=this.getView().getMapView().getZoom();this.fireEvent("mapstate",b[1],b[0],a)},updateGeofences:function(){this.getView().getGeofencesSource().clear();
this.lookupReference("showGeofencesButton").pressed&&Ext.getStore("Geofences").each(function(a){var b=new ol.Feature(Traccar.GeofenceConverter.wktToGeometry(this.getView().getMapView(),a.get("area")));b.setStyle(this.getAreaStyle(a.get("name"),a.get("attributes")?a.get("attributes").color:null));this.getView().getGeofencesSource().addFeature(b);return!0},this)},zoomToAllDevices:function(){this.zoomToAllPositions(Ext.getStore("LatestPositions").getData().items)}});
Ext.define("Traccar.view.dialog.MapPickerController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.mapPicker",config:{listen:{controller:{"*":{mapstate:"setMapState"}}}},getMapState:function(){this.fireEvent("mapstaterequest")},setMapState:function(a,b,c){this.lookupReference("latitude").setValue(a);this.lookupReference("longitude").setValue(b);this.lookupReference("zoom").setValue(c)}});
Ext.define("Traccar.view.dialog.UserController",{extend:Traccar.view.dialog.MapPickerController,alias:"controller.user",init:function(){Traccar.app.getUser().get("admin")&&(this.lookupReference("adminField").setDisabled(!1),this.lookupReference("deviceLimitField").setDisabled(!1),this.lookupReference("userLimitField").setDisabled(!1));if(Traccar.app.getUser().get("admin")||!this.getView().selfEdit)this.lookupReference("readonlyField").setDisabled(!1),this.lookupReference("disabledField").setDisabled(!1),
this.lookupReference("expirationTimeField").setDisabled(!1),this.lookupReference("deviceReadonlyField").setDisabled(!1)},symbols:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",generateToken:function(){var a,b="";for(a=0;32>a;a++)b+=this.symbols.charAt(Math.floor(Math.random()*this.symbols.length));this.lookupReference("tokenField").setValue(b)},testNotification:function(){Ext.Ajax.request({url:"api/users/notifications/test",method:"POST",failure:function(a){Traccar.app.showError(a)}})},
onSaveClick:function(a){var b,c;b=a.up("window").down("form");b.updateRecord();b=b.getRecord();b===Traccar.app.getUser()?b.save():(c=Ext.getStore("Users"),b.phantom&&c.add(b),c.sync({failure:function(a){c.rejectChanges();Traccar.app.showError(a.exceptions[0].getError().response)}}));a.up("window").close()}});
Ext.define("Traccar.view.dialog.User",{extend:Traccar.view.dialog.BaseEdit,controller:"user",title:Strings.settingsUser,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName},{xtype:"textfield",name:"email",fieldLabel:Strings.userEmail,allowBlank:!1},{xtype:"textfield",name:"password",fieldLabel:Strings.userPassword,inputType:"password",allowBlank:!1}]},{xtype:"fieldset",title:Strings.sharedPreferences,collapsible:!0,
collapsed:!0,items:[{xtype:"textfield",name:"phone",fieldLabel:Strings.sharedPhone},{xtype:"combobox",name:"map",fieldLabel:Strings.mapLayer,store:"MapTypes",displayField:"name",valueField:"key",editable:!1},{xtype:"combobox",name:"distanceUnit",fieldLabel:Strings.sharedDistance,store:"DistanceUnits",displayField:"name",valueField:"key",editable:!1},{xtype:"combobox",name:"speedUnit",fieldLabel:Strings.settingsSpeedUnit,store:"SpeedUnits",displayField:"name",valueField:"key",editable:!1},{xtype:"numberfield",
reference:"latitude",name:"latitude",fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",reference:"longitude",name:"longitude",fieldLabel:Strings.positionLongitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",reference:"zoom",name:"zoom",fieldLabel:Strings.serverZoom},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"twelveHourFormat",fieldLabel:Strings.settingsTwelveHourFormat,allowBlank:!1},{xtype:"combobox",
name:"coordinateFormat",fieldLabel:Strings.settingsCoordinateFormat,store:"CoordinateFormats",displayField:"name",valueField:"key",editable:!1},{xtype:"combobox",name:"timezone",fieldLabel:Strings.sharedTimezone,store:"AllTimezones",queryMode:"local",displayField:"key",editable:!1}]},{xtype:"fieldset",title:Strings.sharedPermissions,collapsible:!0,collapsed:!0,items:[{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"disabled",fieldLabel:Strings.userDisabled,disabled:!0,reference:"disabledField"},
{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"admin",fieldLabel:Strings.userAdmin,disabled:!0,reference:"adminField"},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"readonly",fieldLabel:Strings.serverReadonly,disabled:!0,reference:"readonlyField"},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"deviceReadonly",fieldLabel:Strings.userDeviceReadonly,disabled:!0,reference:"deviceReadonlyField"},{xtype:"datefield",name:"expirationTime",fieldLabel:Strings.userExpirationTime,
disabled:!0,reference:"expirationTimeField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat},{xtype:"numberfield",name:"deviceLimit",fieldLabel:Strings.userDeviceLimit,disabled:!0,reference:"deviceLimitField"},{xtype:"numberfield",name:"userLimit",fieldLabel:Strings.userUserLimit,disabled:!0,reference:"userLimitField"},{xtype:"textfield",name:"token",reference:"tokenField",fieldLabel:Strings.userToken,triggers:{generate:{cls:"iconCls: x-fa fa-refresh",handler:"generateToken"}}}]}]},
buttons:[{text:Strings.sharedAttributes,handler:"showAttributesView"},{glyph:"xf041@FontAwesome",minWidth:0,handler:"getMapState",tooltip:Strings.sharedGetMapState,tooltipType:"title"},{glyph:"xf003@FontAwesome",minWidth:0,handler:"testNotification",hidden:!0,reference:"testNotificationButton",tooltip:Strings.sharedTestNotification,tooltipType:"title"},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",
tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.Server",{extend:Traccar.view.dialog.BaseEdit,controller:"mapPicker",title:Strings.serverTitle,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedPreferences,items:[{xtype:"combobox",name:"map",fieldLabel:Strings.mapLayer,store:"MapTypes",displayField:"name",valueField:"key",editable:!1},{xtype:"textfield",name:"bingKey",fieldLabel:Strings.mapBingKey},{xtype:"textfield",name:"mapUrl",fieldLabel:Strings.mapCustom},{xtype:"combobox",name:"distanceUnit",fieldLabel:Strings.sharedDistance,
store:"DistanceUnits",displayField:"name",valueField:"key",editable:!1},{xtype:"combobox",name:"speedUnit",fieldLabel:Strings.settingsSpeedUnit,store:"SpeedUnits",displayField:"name",valueField:"key",editable:!1},{xtype:"numberfield",reference:"latitude",name:"latitude",fieldLabel:Strings.positionLatitude,decimalPrecision:Traccar.Style.coordinatePrecision},{xtype:"numberfield",reference:"longitude",name:"longitude",fieldLabel:Strings.positionLongitude,decimalPrecision:Traccar.Style.coordinatePrecision},
{xtype:"numberfield",reference:"zoom",name:"zoom",fieldLabel:Strings.serverZoom},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"twelveHourFormat",fieldLabel:Strings.settingsTwelveHourFormat,allowBlank:!1},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"forceSettings",fieldLabel:Strings.serverForceSettings,allowBlank:!1},{xtype:"combobox",name:"coordinateFormat",fieldLabel:Strings.settingsCoordinateFormat,store:"CoordinateFormats",displayField:"name",valueField:"key",editable:!1},
{xtype:"combobox",name:"timezone",fieldLabel:Strings.sharedTimezone,store:"AllTimezones",queryMode:"local",displayField:"key",editable:!1}]},{xtype:"fieldset",title:Strings.sharedPermissions,collapsible:!0,collapsed:!0,items:[{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"registration",fieldLabel:Strings.serverRegistration,allowBlank:!1},{xtype:"checkboxfield",inputValue:!0,uncheckedValue:!1,name:"readonly",fieldLabel:Strings.serverReadonly,allowBlank:!1},{xtype:"checkboxfield",inputValue:!0,
uncheckedValue:!1,name:"deviceReadonly",fieldLabel:Strings.userDeviceReadonly,allowBlank:!1}]}]},buttons:[{text:Strings.sharedAttributes,handler:"showAttributesView"},{glyph:"xf041@FontAwesome",minWidth:0,handler:"getMapState",tooltip:Strings.sharedGetMapState,tooltipType:"title"},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.permissions.UserDevices",{extend:Traccar.view.permissions.Base,xtype:"userDevicesView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal},{text:Strings.deviceIdentifier,dataIndex:"uniqueId",flex:1,minWidth:Traccar.Style.columnWidthNormal}]}});Ext.define("Traccar.view.permissions.UserGroups",{extend:Traccar.view.permissions.Base,xtype:"userGroupsView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal}]}});
Ext.define("Traccar.view.permissions.UserGeofences",{extend:Traccar.view.permissions.Base,xtype:"userGeofencesView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal}]}});Ext.define("Traccar.view.permissions.UserCalendars",{extend:Traccar.view.permissions.Base,xtype:"userCalendarsView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal}]}});
Ext.define("Traccar.view.permissions.UserUsers",{extend:Traccar.view.permissions.Base,xtype:"userUsersView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal}]}});
Ext.define("Traccar.view.NotificationsController",{extend:Ext.app.ViewController,alias:"controller.notificationsController",init:function(){this.getView().getStore().load({params:{userId:this.getView().user.getId()}})},onCheckChange:function(a,b){var c=this.getView().getStore().getAt(b);Ext.Ajax.request({scope:this,url:"api/users/notifications",jsonData:c.data,callback:function(a,b,c){b||Traccar.app.showError(c)}})}});
Ext.define("Traccar.view.Notifications",{extend:Ext.grid.Panel,xtype:"notificationsView",controller:"notificationsController",store:"Notifications",selModel:{selType:"cellmodel"},viewConfig:{markDirty:!1},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.notificationType,dataIndex:"type",flex:2,renderer:function(a){return Traccar.app.getEventString(a)}},{text:Strings.notificationWeb,dataIndex:"web",xtype:"checkcolumn",listeners:{checkChange:"onCheckChange"}},
{text:Strings.notificationMail,dataIndex:"mail",xtype:"checkcolumn",listeners:{checkChange:"onCheckChange"}},{text:Strings.notificationSms,dataIndex:"sms",xtype:"checkcolumn",listeners:{checkChange:"onCheckChange"}}]}});
Ext.define("Traccar.view.edit.UsersController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.users",objectModel:"Traccar.model.User",objectDialog:"Traccar.view.dialog.User",removeTitle:Strings.settingsUser,init:function(){Ext.getStore("Users").load();this.lookupReference("userUsersButton").setHidden(!Traccar.app.getUser().get("admin"))},onEditClick:function(){var a,b=this.getView().getSelectionModel().getSelection()[0];a=Ext.create("Traccar.view.dialog.User",{selfEdit:b.get("id")===
Traccar.app.getUser().get("id")});a.down("form").loadRecord(b);a.show()},onAddClick:function(){var a,b;a=Ext.create("Traccar.model.User");Traccar.app.getUser().get("admin")&&a.set("deviceLimit",-1);Traccar.app.getUser().get("expirationTime")&&a.set("expirationTime",Traccar.app.getUser().get("expirationTime"));b=Ext.create("Traccar.view.dialog.User");b.down("form").loadRecord(a);b.show()},onDevicesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",
{title:Strings.deviceTitle,items:{xtype:"userDevicesView",baseObjectName:"userId",linkObjectName:"deviceId",storeName:"AllDevices",linkStoreName:"Devices",urlApi:"api/permissions/devices",baseObject:a.getId()}}).show()},onGroupsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsGroups,items:{xtype:"userGroupsView",baseObjectName:"userId",linkObjectName:"groupId",storeName:"AllGroups",linkStoreName:"Groups",urlApi:"api/permissions/groups",
baseObject:a.getId()}}).show()},onGeofencesClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,items:{xtype:"userGeofencesView",baseObjectName:"userId",linkObjectName:"geofenceId",storeName:"AllGeofences",linkStoreName:"Geofences",urlApi:"api/permissions/geofences",baseObject:a.getId()}}).show()},onNotificationsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",
{title:Strings.sharedNotifications,modal:!1,items:{xtype:"notificationsView",user:a}}).show()},onCalendarsClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedCalendars,items:{xtype:"userCalendarsView",baseObjectName:"userId",linkObjectName:"calendarId",storeName:"AllCalendars",linkStoreName:"Calendars",urlApi:"api/permissions/calendars",baseObject:a.getId()}}).show()},onUsersClick:function(){var a=this.getView().getSelectionModel().getSelection()[0];
Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsUsers,items:{xtype:"userUsersView",baseObjectName:"userId",linkObjectName:"managedUserId",storeName:"Users",urlApi:"api/permissions/users",baseObject:a.getId()}}).show()},onSelectionChange:function(a,b){var c=0===b.length;this.lookupReference("userDevicesButton").setDisabled(c);this.lookupReference("userGroupsButton").setDisabled(c);this.lookupReference("userGeofencesButton").setDisabled(c);this.lookupReference("userNotificationsButton").setDisabled(c);
this.lookupReference("userCalendarsButton").setDisabled(c);this.lookupReference("userUsersButton").setDisabled(c||0===b[0].get("userLimit"));this.callParent(arguments)}});
Ext.define("Traccar.view.edit.Users",{extend:Ext.grid.Panel,xtype:"usersView",controller:"users",store:"Users",plugins:"gridfilters",tbar:{xtype:"editToolbar",items:[{disabled:!0,handler:"onGeofencesClick",reference:"userGeofencesButton",glyph:"xf21d@FontAwesome",tooltip:Strings.sharedGeofences,tooltipType:"title"},{disabled:!0,handler:"onDevicesClick",reference:"userDevicesButton",glyph:"xf248@FontAwesome",tooltip:Strings.deviceTitle,tooltipType:"title"},{disabled:!0,handler:"onGroupsClick",reference:"userGroupsButton",
glyph:"xf247@FontAwesome",tooltip:Strings.settingsGroups,tooltipType:"title"},{disabled:!0,handler:"onUsersClick",reference:"userUsersButton",glyph:"xf0c0@FontAwesome",tooltip:Strings.settingsUsers,tooltipType:"title"},{disabled:!0,handler:"onNotificationsClick",reference:"userNotificationsButton",glyph:"xf003@FontAwesome",tooltip:Strings.sharedNotifications,tooltipType:"title"},{disabled:!0,handler:"onCalendarsClick",reference:"userCalendarsButton",glyph:"xf073@FontAwesome",tooltip:Strings.sharedCalendars,
tooltipType:"title"}]},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name"},{text:Strings.userEmail,dataIndex:"email",filter:"string"},{text:Strings.userAdmin,dataIndex:"admin"},{text:Strings.serverReadonly,dataIndex:"readonly",hidden:!0},{text:Strings.userDeviceReadonly,dataIndex:"deviceReadonly",hidden:!0},{text:Strings.userDisabled,dataIndex:"disabled"},{text:Strings.userExpirationTime,
dataIndex:"expirationTime",hidden:!0,renderer:Traccar.AttributeFormatter.getFormatter("expirationTime")}]}});
Ext.define("Traccar.view.dialog.Group",{extend:Traccar.view.dialog.BaseEdit,title:Strings.groupDialog,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1}]},{xtype:"fieldset",title:Strings.sharedExtra,collapsible:!0,collapsed:!0,items:[{xtype:"combobox",name:"groupId",fieldLabel:Strings.groupParent,store:"Groups",queryMode:"local",displayField:"name",valueField:"id"}]}]}});
Ext.define("Traccar.view.permissions.GroupGeofences",{extend:Traccar.view.permissions.Base,xtype:"groupGeofencesView",columns:{items:[{text:Strings.sharedName,dataIndex:"name",flex:1,minWidth:Traccar.Style.columnWidthNormal}]}});
Ext.define("Traccar.view.edit.GroupsController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.groups",objectModel:"Traccar.model.Group",objectDialog:"Traccar.view.dialog.Group",removeTitle:Strings.groupDialog,onGeofencesClick:function(){var a,b;a=Traccar.app.getUser().get("admin");b=this.getView().getSelectionModel().getSelection()[0];Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,items:{xtype:"groupGeofencesView",baseObjectName:"groupId",linkObjectName:"geofenceId",
storeName:a?"AllGeofences":"Geofences",urlApi:"api/groups/geofences",baseObject:b.getId()}}).show()},onSelectionChange:function(a){var b=0<a.length;this.lookupReference("toolbarGeofencesButton").setDisabled(b);this.callParent(arguments)}});
Ext.define("Traccar.view.edit.Groups",{extend:Ext.grid.Panel,xtype:"groupsView",controller:"groups",store:"Groups",tbar:{xtype:"editToolbar",items:[{xtype:"button",disabled:!0,handler:"onGeofencesClick",reference:"toolbarGeofencesButton",glyph:"xf21d@FontAwesome",tooltip:Strings.sharedGeofences,tooltipType:"title"}]},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name"}]}});
Ext.define("Traccar.view.map.GeofenceMapController",{extend:Ext.app.ViewController,alias:"controller.geofenceMap",config:{listen:{controller:{"*":{mapstate:"setMapState"}}}},onSaveClick:function(a){var b,c;0<this.getView().getFeatures().getLength()&&(b=this.getView().getFeatures().pop().getGeometry(),c=this.getView().getMapView().getProjection(),this.fireEvent("savearea",Traccar.GeofenceConverter.geometryToWkt(c,b)),a.up("window").close())},onCancelClick:function(a){a.up("window").close()},onTypeSelect:function(a){this.getView().removeInteraction();
this.getView().addInteraction(a.getValue())},setMapState:function(a,b,c){this.getView().getMapView().setCenter(ol.proj.fromLonLat([b,a]));this.getView().getMapView().setZoom(c)}});
Ext.define("Traccar.view.map.GeofenceMap",{extend:Traccar.view.map.BaseMap,xtype:"geofenceMapView",controller:"geofenceMap",bodyBorder:!0,tbar:{items:[{xtype:"combobox",store:"GeofenceTypes",valueField:"key",displayField:"name",editable:!1,listeners:{select:"onTypeSelect"}},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"onCancelClick"}]},
getFeatures:function(){return this.features},initMap:function(){var a,b;this.callParent();a=this.map;this.features=new ol.Collection;this.area?(b=Traccar.GeofenceConverter.wktToGeometry(this.mapView,this.area),this.features.push(new ol.Feature(b)),this.mapView.fit(b)):this.controller.fireEvent("mapstaterequest");b=ol.color.asArray(Traccar.Style.mapGeofenceColor);b[3]=Traccar.Style.mapGeofenceOverlayOpacity;(new ol.layer.Vector({source:new ol.source.Vector({features:this.features}),style:new ol.style.Style({fill:new ol.style.Fill({color:b}),
stroke:new ol.style.Stroke({color:Traccar.Style.mapGeofenceColor,width:Traccar.Style.mapGeofenceWidth}),image:new ol.style.Circle({radius:Traccar.Style.mapGeofenceRadius,fill:new ol.style.Fill({color:Traccar.Style.mapGeofenceColor})})})})).setMap(a);a.addInteraction(new ol.interaction.Modify({features:this.features,deleteCondition:function(a){return ol.events.condition.shiftKeyOnly(a)&&ol.events.condition.singleClick(a)}}))},addInteraction:function(a){this.draw=new ol.interaction.Draw({features:this.features,
type:a});this.draw.on("drawstart",function(){this.features.clear()},this);this.map.addInteraction(this.draw)},removeInteraction:function(){this.draw&&(this.map.removeInteraction(this.draw),this.draw=null)}});
Ext.define("Traccar.view.dialog.GeofenceController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.geofence",config:{listen:{controller:{"*":{savearea:"saveArea"}}}},saveArea:function(a){this.lookupReference("areaField").setValue(a)},onAreaClick:function(a){a=a.up("window").down("form").getRecord();Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedArea,items:{xtype:"geofenceMapView",area:a.get("area")}}).show()}});
Ext.define("Traccar.view.dialog.Geofence",{extend:Traccar.view.dialog.BaseEdit,controller:"geofence",title:Strings.sharedGeofence,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName}]},{xtype:"fieldset",title:Strings.sharedExtra,collapsible:!0,collapsed:!0,items:[{xtype:"textfield",name:"description",fieldLabel:Strings.sharedDescription},{xtype:"combobox",name:"calendarId",store:"Calendars",queryMode:"local",
displayField:"name",valueField:"id",fieldLabel:Strings.sharedCalendar},{xtype:"hiddenfield",name:"area",allowBlank:!1,reference:"areaField"}]}]},buttons:[{text:Strings.sharedArea,glyph:"xf21d@FontAwesome",handler:"onAreaClick"},{text:Strings.sharedAttributes,handler:"showAttributesView"},{xtype:"tbfill"},{glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSave,tooltipType:"title",minWidth:0,handler:"onSaveClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,
handler:"closeView"}]});Ext.define("Traccar.view.edit.GeofencesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.geofences",objectModel:"Traccar.model.Geofence",objectDialog:"Traccar.view.dialog.Geofence",removeTitle:Strings.sharedGeofence});
Ext.define("Traccar.view.edit.Geofences",{extend:Ext.grid.Panel,xtype:"geofencesView",controller:"geofences",store:"Geofences",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name"},{text:Strings.sharedDescription,dataIndex:"description"}]}});
Ext.define("Traccar.view.edit.AttributeAliasesController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.attributeAliases",objectModel:"Traccar.model.AttributeAlias",objectDialog:"Traccar.view.dialog.AttributeAlias",removeTitle:Strings.sharedAttributeAlias,init:function(){var a=Traccar.app.getUser().get("admin")||0<Traccar.app.getUser().get("userLimit");this.lookupReference("deviceField").setStore(a?"AllDevices":"Devices");this.lookupReference("toolbarAddButton").setDisabled(!0);this.lookupReference("toolbarEditButton").setDisabled(!0);
this.lookupReference("toolbarRemoveButton").setDisabled(!0);this.getView().setStore(Ext.create("Ext.data.ChainedStore",{storeId:"EditorAttributeAliases",source:"AttributeAliases"}));this.getView().getStore().filter("deviceId",0)},onAddClick:function(){var a,b;a=Ext.create("Traccar.model.AttributeAlias");a.store=Ext.getStore("AttributeAliases");b=this.lookupReference("deviceField").getValue();a.set("deviceId",b);b=Ext.create("Traccar.view.dialog.AttributeAlias");b.down("form").loadRecord(a);b.show()},
onSelectionChange:function(a){var b=!this.lookupReference("deviceField").getValue();this.lookupReference("toolbarAddButton").setDisabled(b);b=0===a.length||!this.lookupReference("deviceField").getValue();this.lookupReference("toolbarEditButton").setDisabled(b);this.lookupReference("toolbarRemoveButton").setDisabled(b)},onDeviceChange:function(a,b){var c=Traccar.app.getUser().get("admin")||0<Traccar.app.getUser().get("userLimit");this.onSelectionChange("");null!==b?(this.getView().getStore().filter("deviceId",
b),c&&0===this.getView().getStore().getCount()&&(Ext.getStore("AttributeAliases").getProxy().setExtraParam("deviceId",b),Ext.getStore("AttributeAliases").load({addRecords:!0}))):this.getView().getStore().filter("deviceId",0)}});
Ext.define("Traccar.view.edit.AttributeAliases",{extend:Ext.grid.Panel,xtype:"attributeAliasesView",controller:"attributeAliases",tbar:{xtype:"editToolbar",items:["-",{xtype:"tbtext",html:Strings.sharedDevice},{xtype:"combobox",reference:"deviceField",store:"Devices",displayField:"name",valueField:"id",editable:!1,listeners:{change:"onDeviceChange"}}]},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedAttribute,
dataIndex:"attribute"},{text:Strings.sharedAlias,dataIndex:"alias"}]}});Ext.define("Traccar.view.StatisticsController",{extend:Ext.app.ViewController,alias:"controller.statistics",onShowClick:function(){Ext.getStore("Statistics").load({params:{from:this.lookupReference("fromDateField").getValue().toISOString(),to:this.lookupReference("toDateField").getValue().toISOString()}})}});
Ext.define("Traccar.view.Statistics",{extend:Ext.grid.Panel,xtype:"statisticsView",controller:"statistics",store:"Statistics",tbar:[{xtype:"tbtext",html:Strings.reportFrom},{xtype:"datefield",reference:"fromDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date((new Date).getTime()-864E5)},"-",{xtype:"tbtext",html:Strings.reportTo},{xtype:"datefield",reference:"toDateField",startDay:Traccar.Style.weekStartDay,format:Traccar.Style.dateFormat,value:new Date},"-",
{text:Strings.reportShow,handler:"onShowClick"}],columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.statisticsCaptureTime,dataIndex:"captureTime",xtype:"datecolumn",renderer:Traccar.AttributeFormatter.defaultFormatter()},{text:Strings.statisticsActiveUsers,dataIndex:"activeUsers"},{text:Strings.statisticsActiveDevices,dataIndex:"activeDevices"},{text:Strings.statisticsRequests,dataIndex:"requests"},{text:Strings.statisticsMessagesReceived,dataIndex:"messagesReceived"},
{text:Strings.statisticsMessagesStored,dataIndex:"messagesStored"}]}});
Ext.define("Traccar.view.dialog.DeviceDistanceController",{extend:Ext.app.ViewController,alias:"controller.deviceDistance",onDeviceChange:function(a,b){this.lookupReference("setButton").setDisabled(null===b)},onSetClick:function(a){var b={};b.deviceId=this.lookupReference("deviceId").getValue();b.totalDistance=this.lookupReference("totalDistance").getValue();Ext.Ajax.request({scope:this,method:"PUT",url:"api/devices/"+b.deviceId+"/distance",jsonData:Ext.util.JSON.encode(b),callback:function(a,b,e){b||
Traccar.app.showError(e)}});a.up("window").close()}});
Ext.define("Traccar.view.dialog.DeviceDistance",{extend:Traccar.view.dialog.Base,controller:"deviceDistance",title:Strings.sharedDeviceDistance,items:[{xtype:"combobox",reference:"deviceId",fieldLabel:Strings.sharedDevice,store:"AllDevices",displayField:"name",valueField:"id",editable:!1,listeners:{change:"onDeviceChange"}},{xtype:"numberfield",reference:"totalDistance",fieldLabel:Strings.deviceTotalDistance,value:0}],buttons:[{disabled:!0,reference:"setButton",glyph:"xf00c@FontAwesome",tooltip:Strings.sharedSet,
tooltipType:"title",minWidth:0,handler:"onSetClick"},{glyph:"xf00d@FontAwesome",tooltip:Strings.sharedCancel,tooltipType:"title",minWidth:0,handler:"closeView"}]});
Ext.define("Traccar.view.dialog.CalendarController",{extend:Traccar.view.dialog.BaseEditController,alias:"controller.calendar",onFileChange:function(a){var b;0<a.fileInputEl.dom.files.length&&(b=new FileReader,b.onload=function(b){a.up("window").lookupReference("dataField").setValue(btoa(String.fromCharCode.apply(null,new Uint8Array(b.target.result))))},b.onerror=function(a){Traccar.app.showError(a.target.error)},b.readAsArrayBuffer(a.fileInputEl.dom.files[0]))}});
Ext.define("Traccar.view.dialog.Calendar",{extend:Traccar.view.dialog.BaseEdit,controller:"calendar",title:Strings.sharedCalendar,items:{xtype:"form",items:[{xtype:"fieldset",title:Strings.sharedRequired,items:[{xtype:"textfield",name:"name",fieldLabel:Strings.sharedName,allowBlank:!1},{xtype:"filefield",name:"file",fieldLabel:Strings.sharedFile,allowBlank:!1,buttonConfig:{glyph:"xf093@FontAwesome",text:"",tooltip:Strings.sharedSelectFile,tooltipType:"title",minWidth:0},listeners:{change:"onFileChange"}}]},
{xtype:"hiddenfield",name:"data",allowBlank:!1,reference:"dataField"}]}});Ext.define("Traccar.view.edit.CalendarsController",{extend:Traccar.view.edit.ToolbarController,alias:"controller.calendars",objectModel:"Traccar.model.Calendar",objectDialog:"Traccar.view.dialog.Calendar",removeTitle:Strings.sharedCalendar});
Ext.define("Traccar.view.edit.Calendars",{extend:Ext.grid.Panel,xtype:"calendarsView",controller:"calendars",store:"Calendars",tbar:{xtype:"editToolbar"},listeners:{selectionchange:"onSelectionChange"},columns:{defaults:{flex:1,minWidth:Traccar.Style.columnWidthNormal},items:[{text:Strings.sharedName,dataIndex:"name"}]}});
Ext.define("Traccar.view.SettingsMenuController",{extend:Ext.app.ViewController,alias:"controller.settings",init:function(){var a,b,c,d;a=Traccar.app.getUser().get("admin");b=0!==Traccar.app.getUser().get("userLimit");c=Traccar.app.getPreference("readonly",!1);d=Traccar.app.getUser().get("deviceReadonly");a&&(this.lookupReference("settingsServerButton").setHidden(!1),this.lookupReference("settingsStatisticsButton").setHidden(!1),this.lookupReference("settingsDeviceDistanceButton").setHidden(!1));
(a||b)&&this.lookupReference("settingsUsersButton").setHidden(!1);if(a||!c)this.lookupReference("settingsUserButton").setHidden(!1),this.lookupReference("settingsGroupsButton").setHidden(!1),this.lookupReference("settingsGeofencesButton").setHidden(!1),this.lookupReference("settingsNotificationsButton").setHidden(!1),this.lookupReference("settingsCalendarsButton").setHidden(!1);(a||!d&&!c)&&this.lookupReference("settingsAttributeAliasesButton").setHidden(!1)},onUserClick:function(){var a=Ext.create("Traccar.view.dialog.User",
{selfEdit:!0});a.down("form").loadRecord(Traccar.app.getUser());a.lookupReference("testNotificationButton").setHidden(!1);a.show()},onGroupsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsGroups,modal:!1,items:{xtype:"groupsView"}}).show()},onGeofencesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedGeofences,modal:!1,items:{xtype:"geofencesView"}}).show()},onServerClick:function(){var a=Ext.create("Traccar.view.dialog.Server");a.down("form").loadRecord(Traccar.app.getServer());
a.show()},onUsersClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.settingsUsers,modal:!1,items:{xtype:"usersView"}}).show()},onNotificationsClick:function(){var a=Traccar.app.getUser();Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedNotifications,modal:!1,items:{xtype:"notificationsView",user:a}}).show()},onAttributeAliasesClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedAttributeAliases,modal:!1,items:{xtype:"attributeAliasesView"}}).show()},
onStatisticsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.statisticsTitle,modal:!1,items:{xtype:"statisticsView"}}).show()},onDeviceDistanceClick:function(){Ext.create("Traccar.view.dialog.DeviceDistance").show()},onCalendarsClick:function(){Ext.create("Traccar.view.BaseWindow",{title:Strings.sharedCalendars,modal:!1,items:{xtype:"calendarsView"}}).show()},onLogoutClick:function(){Ext.create("Traccar.view.dialog.LoginController").logout()}});
Ext.define("Traccar.view.SettingsMenu",{extend:Ext.button.Button,xtype:"settingsMenu",glyph:"xf013@FontAwesome",tooltip:Strings.settingsTitle,tooltipType:"title",menu:{controller:"settings",items:[{hidden:!0,text:Strings.settingsUser,glyph:"xf007@FontAwesome",handler:"onUserClick",reference:"settingsUserButton"},{hidden:!0,text:Strings.settingsGroups,glyph:"xf247@FontAwesome",handler:"onGroupsClick",reference:"settingsGroupsButton"},{hidden:!0,text:Strings.sharedGeofences,glyph:"xf21d@FontAwesome",
handler:"onGeofencesClick",reference:"settingsGeofencesButton"},{hidden:!0,text:Strings.settingsServer,glyph:"xf0ad@FontAwesome",handler:"onServerClick",reference:"settingsServerButton"},{hidden:!0,text:Strings.settingsUsers,glyph:"xf0c0@FontAwesome",handler:"onUsersClick",reference:"settingsUsersButton"},{hidden:!0,text:Strings.sharedNotifications,glyph:"xf003@FontAwesome",handler:"onNotificationsClick",reference:"settingsNotificationsButton"},{hidden:!0,text:Strings.sharedAttributeAliases,glyph:"xf02c@FontAwesome",
handler:"onAttributeAliasesClick",reference:"settingsAttributeAliasesButton"},{hidden:!0,text:Strings.sharedDeviceDistance,glyph:"xf0e4@FontAwesome",handler:"onDeviceDistanceClick",reference:"settingsDeviceDistanceButton"},{hidden:!0,text:Strings.statisticsTitle,glyph:"xf080@FontAwesome",handler:"onStatisticsClick",reference:"settingsStatisticsButton"},{hidden:!0,text:Strings.sharedCalendars,glyph:"xf073@FontAwesome",handler:"onCalendarsClick",reference:"settingsCalendarsButton"},{text:Strings.loginLogout,
glyph:"xf08b@FontAwesome",handler:"onLogoutClick"}]}});
Ext.define("Traccar.view.map.Map",{extend:Traccar.view.map.BaseMap,xtype:"mapView",controller:"map",title:Strings.mapTitle,tbar:{componentCls:"toolbar-header-style",defaults:{xtype:"button",tooltipType:"title",stateEvents:["toggle"],enableToggle:!0,stateful:{pressed:!0}},items:[{xtype:"tbtext",html:Strings.mapTitle,baseCls:"x-panel-header-title-default"},{xtype:"tbfill"},{handler:"showReports",reference:"showReportsButton",glyph:"xf0f6@FontAwesome",stateful:!1,enableToggle:!1,tooltip:Strings.reportTitle},
{handler:"updateGeofences",reference:"showGeofencesButton",glyph:"xf21d@FontAwesome",pressed:!0,stateId:"show-geofences-button",tooltip:Strings.sharedGeofences},{handler:"showLiveRoutes",reference:"showLiveRoutes",glyph:"xf1b0@FontAwesome",stateId:"show-live-routes-button",tooltip:Strings.mapLiveRoutes},{reference:"deviceFollowButton",glyph:"xf05b@FontAwesome",tooltip:Strings.deviceFollow,stateId:"device-follow-button",toggleHandler:"onFollowClick"},{id:"soundButton",glyph:"xf0a2@FontAwesome",tooltip:Strings.sharedSound,
stateId:"sound-button"},{xtype:"settingsMenu",enableToggle:!1}]},getMarkersSource:function(){return this.markersSource},getAccuracySource:function(){return this.accuracySource},getRouteSource:function(){return this.routeSource},getGeofencesSource:function(){return this.geofencesSource},getLiveRouteSource:function(){return this.liveRouteSource},getLiveRouteLayer:function(){return this.liveRouteLayer},initMap:function(){this.callParent();this.geofencesSource=new ol.source.Vector({});this.map.addLayer(new ol.layer.Vector({name:"geofencesLayer",
source:this.geofencesSource}));this.liveRouteSource=new ol.source.Vector({});this.liveRouteLayer=new ol.layer.Vector({source:this.liveRouteSource,visible:!1});this.map.addLayer(this.liveRouteLayer);this.routeSource=new ol.source.Vector({});this.map.addLayer(new ol.layer.Vector({source:this.routeSource}));this.accuracySource=new ol.source.Vector({});this.map.addLayer(new ol.layer.Vector({name:"accuracyLayer",source:this.accuracySource}));this.markersSource=new ol.source.Vector({});this.map.addLayer(new ol.layer.Vector({source:this.markersSource}))}});
Ext.define("Traccar.view.Main",{extend:Ext.container.Viewport,alias:"widget.main",layout:"border",defaults:{header:!1,collapsible:!0,split:!0},items:[{region:"west",layout:"border",width:Traccar.Style.deviceWidth,title:Strings.devicesAndState,titleCollapse:!0,floatable:!1,stateful:!0,stateId:"devices-and-state-panel",defaults:{split:!0,flex:1},items:[{region:"center",xtype:"devicesView"},{region:"south",xtype:"stateView"}]},{region:"south",xtype:"reportView",height:Traccar.Style.reportHeight,collapsed:!0,
titleCollapse:!0,floatable:!1},{region:"center",xtype:"mapView",collapsible:!1}]});
Ext.define("Traccar.view.MainMobile",{extend:Ext.container.Viewport,alias:"widget.mainMobile",id:"rootPanel",layout:"card",items:[{layout:"border",defaults:{header:!1,collapsible:!0,split:!0},items:[{region:"east",xtype:"stateView",title:Strings.stateTitle,flex:4,collapsed:!0,collapseMode:"mini",titleCollapse:!0,floatable:!1,stateId:"mobile-state-grid"},{region:"center",xtype:"mapView",collapsible:!1,flex:2},{region:"south",xtype:"devicesView",title:Strings.deviceTitle,flex:1,collapsed:!0,titleCollapse:!0,
floatable:!1,stateId:"mobile-devices-grid"}]},{xtype:"reportView"}]});
Ext.define("Traccar.controller.Root",{extend:Ext.app.Controller,init:function(){Ext.state.Manager.setProvider(new Ext.state.CookieProvider)},onLaunch:function(){Ext.Ajax.request({scope:this,url:"api/server",callback:this.onServerReturn})},onServerReturn:function(a,b,c){a={};if(b){Traccar.app.setServer(Ext.decode(c.responseText));if(b=Ext.Object.fromQueryString(window.location.search).token)a.token=b;Ext.Ajax.request({scope:this,url:"api/session",method:"GET",params:a,callback:this.onSessionReturn})}else Traccar.app.showError(c)},
onSessionReturn:function(a,b,c){Ext.get("spinner").setVisible(!1);b?(Traccar.app.setUser(Ext.decode(c.responseText)),this.loadApp()):(this.login=Ext.create("widget.login",{listeners:{scope:this,login:this.onLogin}}),this.login.show())},onLogin:function(){this.login.close();this.loadApp()},loadApp:function(){var a;Ext.getStore("Groups").load();Ext.getStore("Geofences").load();Ext.getStore("Calendars").load();Ext.getStore("AttributeAliases").load();this.initReportEventTypesStore();Ext.getStore("Devices").load({scope:this,
callback:function(){this.asyncUpdate(!0)}});(a=Ext.get("attribution"))&&a.remove();Traccar.app.isMobile()?Ext.create("widget.mainMobile"):Ext.create("widget.main");if(a=Ext.Object.fromQueryString(window.location.search).eventId)this.fireEvent("showsingleevent",a),this.removeUrlParameter("eventId")},beep:function(){this.beepSound||(this.beepSound=new Audio("beep.wav"));this.beepSound.play()},soundPressed:function(){var a=Ext.getCmp("soundButton");return a&&a.pressed},removeUrlParameter:function(a){var b=
Ext.Object.fromQueryString(window.location.search);delete b[a];Ext.Object.isEmpty(b)?window.history.pushState(null,null,window.location.pathname):window.history.pushState(null,null,window.location.pathname+"?"+Ext.Object.toQueryString(b))},asyncUpdate:function(a){var b=this,c,d;c="https:"===window.location.protocol?"wss:":"ws:";d=window.location.pathname.substring(0,window.location.pathname.lastIndexOf("/")+1);c=new WebSocket(c+"//"+window.location.host+d+"api/socket");c.onclose=function(){Ext.toast(Strings.errorSocket,
Strings.errorTitle,"br");Ext.Ajax.request({url:"api/devices",success:function(a){b.updateDevices(Ext.decode(a.responseText))},failure:function(a){401===a.status&&window.location.reload()}});Ext.Ajax.request({url:"api/positions",headers:{Accept:"application/json"},success:function(a){b.updatePositions(Ext.decode(a.responseText))}});setTimeout(function(){b.asyncUpdate(!1)},Traccar.Style.reconnectTimeout)};c.onmessage=function(c){c=Ext.decode(c.data);c.devices&&b.updateDevices(c.devices);c.positions&&
(b.updatePositions(c.positions,a),a=!1);c.events&&b.updateEvents(c.events)}},updateDevices:function(a){var b,c,d;c=Ext.getStore("Devices");for(b=0;b<a.length;b++)(d=c.getById(a[b].id))&&d.set({status:a[b].status,lastUpdate:a[b].lastUpdate},{dirty:!1})},updatePositions:function(a,b){var c,d,e;d=Ext.getStore("LatestPositions");for(c=0;c<a.length;c++)(e=d.findRecord("deviceId",a[c].deviceId,0,!1,!1,!0))?e.set(a[c]):d.add(Ext.create("Traccar.model.Position",a[c]));b&&this.zoomToAllDevices()},updateEvents:function(a){var b,
c,d,e;c=Ext.getStore("Events");for(b=0;b<a.length;b++)if(c.add(a[b]),"commandResult"===a[b].type?e=Strings.eventCommandResult+": "+a[b].attributes.result:"alarm"===a[b].type?(e="alarm"+a[b].attributes.alarm.charAt(0).toUpperCase()+a[b].attributes.alarm.slice(1),e=Strings[e]||e):e="textMessage"===a[b].type?Strings.eventTextMessage+": "+a[b].attributes.message:Traccar.app.getEventString(a[b].type),0!==a[b].geofenceId&&(d=Ext.getStore("Geofences").getById(a[b].geofenceId))&&(e+=' "'+d.get("name")+'"'),
d=Ext.getStore("Devices").getById(a[b].deviceId))this.soundPressed()&&this.beep(),Ext.toast(e,d.get("name"),"br")},zoomToAllDevices:function(){var a,b,c;a=Traccar.app.getPreference("latitude",0);b=Traccar.app.getPreference("longitude",0);c=Traccar.app.getPreference("zoom",0);0===a&&(0===b&&0===c)&&this.fireEvent("zoomtoalldevices")},initReportEventTypesStore:function(){var a=Ext.getStore("ReportEventTypes");a.add({type:Traccar.store.ReportEventTypes.allEvents,name:Strings.eventAll});Ext.create("Traccar.store.AllNotifications").load({scope:this,
callback:function(b,c,d){if(d)for(c=0;c<b.length;c++)d=b[c].get("type"),a.add({type:d,name:Traccar.app.getEventString(d)})}})}});
Ext.define("Traccar.Application",{extend:Ext.app.Application,name:"Traccar",models:"Server User Group Device Position Attribute Command Event Geofence Notification AttributeAlias ReportSummary ReportTrip Calendar".split(" "),stores:"Groups Devices AllGroups AllDevices Positions LatestPositions Users Attributes MapTypes DistanceUnits SpeedUnits CoordinateFormats CommandTypes TimeUnits Languages Events Geofences AllGeofences Notifications AllNotifications GeofenceTypes AttributeAliases ReportRoute ReportEvents ReportTrips ReportSummary ReportTypes ReportEventTypes ReportChartTypes Statistics DeviceImages Calendars AllCalendars AllTimezones VisibleDevices DeviceStatuses".split(" "),controllers:["Root"],
isMobile:function(){return window.matchMedia&&window.matchMedia("(max-width: 768px)").matches},getEventString:function(a){a="event"+a.charAt(0).toUpperCase()+a.slice(1);return Strings[a]||a},showReports:function(a){var b=Ext.getCmp("rootPanel");b&&b.setActiveItem(a?1:0)},setUser:function(a){this.user=Ext.create("Ext.data.reader.Json",{model:"Traccar.model.User"}).readRecords(a).getRecords()[0]},getUser:function(){return this.user},setServer:function(a){this.server=Ext.create("Ext.data.reader.Json",
{model:"Traccar.model.Server"}).readRecords(a).getRecords()[0]},getServer:function(){return this.server},getPreference:function(a,b){return this.getServer().get("forceSettings")?this.getServer().get(a)||this.getUser().get(a)||b:this.getUser().get(a)||this.getServer().get(a)||b},getAttributePreference:function(a,b){return this.getServer().get("forceSettings")?this.getServer().get("attributes")[a]||this.getUser().get("attributes")[a]||b:this.getUser().get("attributes")[a]||this.getServer().get("attributes")[a]||
b},getReportColor:function(a){var b,c=Ext.getStore("Devices").getById(a);c&&(b=c.get("attributes")["web.reportColor"]);if(b)return b;b=0;void 0!==a&&(b=a%Traccar.Style.mapRouteColor.length);return Traccar.Style.mapRouteColor[b]},showError:function(a){Ext.isString(a)?Ext.Msg.alert(Strings.errorTitle,a):a.responseText?Ext.Msg.alert(Strings.errorTitle,a.responseText):a.statusText?Ext.Msg.alert(Strings.errorTitle,a.statusText):Ext.Msg.alert(Strings.errorTitle,Strings.errorConnection)}});
Ext.application({name:"Traccar",extend:Traccar.Application});